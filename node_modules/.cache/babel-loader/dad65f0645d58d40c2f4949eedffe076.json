{"ast":null,"code":"/**\r\n * Copyright 2015 Tim Down.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n(function (factory, root) {\n  if (typeof define == \"function\" && define.amd) {\n    define(factory);\n  } else if (typeof module != \"undefined\" && typeof exports == \"object\") {\n    module.exports = factory();\n  } else {\n    root.log4javascript = factory();\n  }\n})(function () {\n  if (!Array.prototype.push) {\n    Array.prototype.push = function () {\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        this[this.length] = arguments[i];\n      }\n\n      return this.length;\n    };\n  }\n\n  if (!Array.prototype.shift) {\n    Array.prototype.shift = function () {\n      if (this.length > 0) {\n        var firstItem = this[0];\n\n        for (var i = 0, len = this.length - 1; i < len; i++) {\n          this[i] = this[i + 1];\n        }\n\n        this.length = this.length - 1;\n        return firstItem;\n      }\n    };\n  }\n\n  if (!Array.prototype.splice) {\n    Array.prototype.splice = function (startIndex, deleteCount) {\n      var itemsAfterDeleted = this.slice(startIndex + deleteCount);\n      var itemsDeleted = this.slice(startIndex, startIndex + deleteCount);\n      this.length = startIndex;\n      var argumentsArray = [];\n\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        argumentsArray[i] = arguments[i];\n      }\n\n      var itemsToAppend = argumentsArray.length > 2 ? itemsAfterDeleted = argumentsArray.slice(2).concat(itemsAfterDeleted) : itemsAfterDeleted;\n\n      for (i = 0, len = itemsToAppend.length; i < len; i++) {\n        this.push(itemsToAppend[i]);\n      }\n\n      return itemsDeleted;\n    };\n  }\n\n  function isUndefined(obj) {\n    return typeof obj == \"undefined\";\n  }\n\n  function EventSupport() {}\n\n  EventSupport.prototype = {\n    eventTypes: [],\n    eventListeners: {},\n    setEventTypes: function setEventTypes(eventTypesParam) {\n      if (eventTypesParam instanceof Array) {\n        this.eventTypes = eventTypesParam;\n        this.eventListeners = {};\n\n        for (var i = 0, len = this.eventTypes.length; i < len; i++) {\n          this.eventListeners[this.eventTypes[i]] = [];\n        }\n      } else {\n        handleError(\"log4javascript.EventSupport [\" + this + \"]: setEventTypes: eventTypes parameter must be an Array\");\n      }\n    },\n    addEventListener: function addEventListener(eventType, listener) {\n      if (typeof listener == \"function\") {\n        if (!array_contains(this.eventTypes, eventType)) {\n          handleError(\"log4javascript.EventSupport [\" + this + \"]: addEventListener: no event called '\" + eventType + \"'\");\n        }\n\n        this.eventListeners[eventType].push(listener);\n      } else {\n        handleError(\"log4javascript.EventSupport [\" + this + \"]: addEventListener: listener must be a function\");\n      }\n    },\n    removeEventListener: function removeEventListener(eventType, listener) {\n      if (typeof listener == \"function\") {\n        if (!array_contains(this.eventTypes, eventType)) {\n          handleError(\"log4javascript.EventSupport [\" + this + \"]: removeEventListener: no event called '\" + eventType + \"'\");\n        }\n\n        array_remove(this.eventListeners[eventType], listener);\n      } else {\n        handleError(\"log4javascript.EventSupport [\" + this + \"]: removeEventListener: listener must be a function\");\n      }\n    },\n    dispatchEvent: function dispatchEvent(eventType, eventArgs) {\n      if (array_contains(this.eventTypes, eventType)) {\n        var listeners = this.eventListeners[eventType];\n\n        for (var i = 0, len = listeners.length; i < len; i++) {\n          listeners[i](this, eventType, eventArgs);\n        }\n      } else {\n        handleError(\"log4javascript.EventSupport [\" + this + \"]: dispatchEvent: no event called '\" + eventType + \"'\");\n      }\n    }\n  };\n  var applicationStartDate = new Date();\n  var uniqueId = \"log4javascript_\" + applicationStartDate.getTime() + \"_\" + Math.floor(Math.random() * 100000000);\n\n  var emptyFunction = function emptyFunction() {};\n\n  var newLine = \"\\r\\n\";\n  var pageLoaded = false;\n\n  function Log4JavaScript() {}\n\n  Log4JavaScript.prototype = new EventSupport();\n  var log4javascript = new Log4JavaScript();\n  log4javascript.version = \"1.4.13\";\n  log4javascript.edition = \"log4javascript\";\n\n  function toStr(obj) {\n    if (obj && obj.toString) {\n      return obj.toString();\n    } else {\n      return String(obj);\n    }\n  }\n\n  function getExceptionMessage(ex) {\n    if (ex.message) {\n      return ex.message;\n    } else if (ex.description) {\n      return ex.description;\n    } else {\n      return toStr(ex);\n    }\n  }\n\n  function getUrlFileName(url) {\n    var lastSlashIndex = Math.max(url.lastIndexOf(\"/\"), url.lastIndexOf(\"\\\\\"));\n    return url.substr(lastSlashIndex + 1);\n  }\n\n  function getExceptionStringRep(ex) {\n    if (ex) {\n      var exStr = \"Exception: \" + getExceptionMessage(ex);\n\n      try {\n        if (ex.lineNumber) {\n          exStr += \" on line number \" + ex.lineNumber;\n        }\n\n        if (ex.fileName) {\n          exStr += \" in file \" + getUrlFileName(ex.fileName);\n        }\n      } catch (localEx) {\n        logLog.warn(\"Unable to obtain file and line information for error\");\n      }\n\n      if (showStackTraces && ex.stack) {\n        exStr += newLine + \"Stack trace:\" + newLine + ex.stack;\n      }\n\n      return exStr;\n    }\n\n    return null;\n  }\n\n  function bool(obj) {\n    return Boolean(obj);\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n  }\n\n  function splitIntoLines(text) {\n    var text2 = text.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    return text2.split(\"\\n\");\n  }\n\n  var urlEncode = typeof window.encodeURIComponent != \"undefined\" ? function (str) {\n    return encodeURIComponent(str);\n  } : function (str) {\n    return escape(str).replace(/\\+/g, \"%2B\").replace(/\"/g, \"%22\").replace(/'/g, \"%27\").replace(/\\//g, \"%2F\").replace(/=/g, \"%3D\");\n  };\n\n  function array_remove(arr, val) {\n    var index = -1;\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (arr[i] === val) {\n        index = i;\n        break;\n      }\n    }\n\n    if (index >= 0) {\n      arr.splice(index, 1);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function array_contains(arr, val) {\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (arr[i] == val) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function extractBooleanFromParam(param, defaultValue) {\n    if (isUndefined(param)) {\n      return defaultValue;\n    } else {\n      return bool(param);\n    }\n  }\n\n  function extractStringFromParam(param, defaultValue) {\n    if (isUndefined(param)) {\n      return defaultValue;\n    } else {\n      return String(param);\n    }\n  }\n\n  function extractIntFromParam(param, defaultValue) {\n    if (isUndefined(param)) {\n      return defaultValue;\n    } else {\n      try {\n        var value = parseInt(param, 10);\n        return isNaN(value) ? defaultValue : value;\n      } catch (ex) {\n        logLog.warn(\"Invalid int param \" + param, ex);\n        return defaultValue;\n      }\n    }\n  }\n\n  function extractFunctionFromParam(param, defaultValue) {\n    if (typeof param == \"function\") {\n      return param;\n    } else {\n      return defaultValue;\n    }\n  }\n\n  function isError(err) {\n    return err instanceof Error;\n  }\n\n  if (!Function.prototype.apply) {\n    Function.prototype.apply = function (obj, args) {\n      var methodName = \"__apply__\";\n\n      if (typeof obj[methodName] != \"undefined\") {\n        methodName += String(Math.random()).substr(2);\n      }\n\n      obj[methodName] = this;\n      var argsStrings = [];\n\n      for (var i = 0, len = args.length; i < len; i++) {\n        argsStrings[i] = \"args[\" + i + \"]\";\n      }\n\n      var script = \"obj.\" + methodName + \"(\" + argsStrings.join(\",\") + \")\";\n      var returnValue = eval(script);\n      delete obj[methodName];\n      return returnValue;\n    };\n  }\n\n  if (!Function.prototype.call) {\n    Function.prototype.call = function (obj) {\n      var args = [];\n\n      for (var i = 1, len = arguments.length; i < len; i++) {\n        args[i - 1] = arguments[i];\n      }\n\n      return this.apply(obj, args);\n    };\n  }\n\n  var logLog = {\n    quietMode: false,\n    debugMessages: [],\n    setQuietMode: function setQuietMode(quietMode) {\n      this.quietMode = bool(quietMode);\n    },\n    numberOfErrors: 0,\n    alertAllErrors: false,\n    setAlertAllErrors: function setAlertAllErrors(alertAllErrors) {\n      this.alertAllErrors = alertAllErrors;\n    },\n    debug: function debug(message) {\n      this.debugMessages.push(message);\n    },\n    displayDebug: function displayDebug() {\n      alert(this.debugMessages.join(newLine));\n    },\n    warn: function warn(message, exception) {},\n    error: function error(message, exception) {\n      if (++this.numberOfErrors == 1 || this.alertAllErrors) {\n        if (!this.quietMode) {\n          var alertMessage = \"log4javascript error: \" + message;\n\n          if (exception) {\n            alertMessage += newLine + newLine + \"Original error: \" + getExceptionStringRep(exception);\n          }\n\n          alert(alertMessage);\n        }\n      }\n    }\n  };\n  log4javascript.logLog = logLog;\n  log4javascript.setEventTypes([\"load\", \"error\"]);\n\n  function handleError(message, exception) {\n    logLog.error(message, exception);\n    log4javascript.dispatchEvent(\"error\", {\n      \"message\": message,\n      \"exception\": exception\n    });\n  }\n\n  log4javascript.handleError = handleError;\n  var enabled = !(typeof log4javascript_disabled != \"undefined\" && log4javascript_disabled);\n\n  log4javascript.setEnabled = function (enable) {\n    enabled = bool(enable);\n  };\n\n  log4javascript.isEnabled = function () {\n    return enabled;\n  };\n\n  var useTimeStampsInMilliseconds = true;\n\n  log4javascript.setTimeStampsInMilliseconds = function (timeStampsInMilliseconds) {\n    useTimeStampsInMilliseconds = bool(timeStampsInMilliseconds);\n  };\n\n  log4javascript.isTimeStampsInMilliseconds = function () {\n    return useTimeStampsInMilliseconds;\n  };\n\n  log4javascript.evalInScope = function (expr) {\n    return eval(expr);\n  };\n\n  var showStackTraces = false;\n\n  log4javascript.setShowStackTraces = function (show) {\n    showStackTraces = bool(show);\n  };\n\n  var Level = function Level(level, name) {\n    this.level = level;\n    this.name = name;\n  };\n\n  Level.prototype = {\n    toString: function toString() {\n      return this.name;\n    },\n    equals: function equals(level) {\n      return this.level == level.level;\n    },\n    isGreaterOrEqual: function isGreaterOrEqual(level) {\n      return this.level >= level.level;\n    }\n  };\n  Level.ALL = new Level(Number.MIN_VALUE, \"ALL\");\n  Level.TRACE = new Level(10000, \"TRACE\");\n  Level.DEBUG = new Level(20000, \"DEBUG\");\n  Level.INFO = new Level(30000, \"INFO\");\n  Level.WARN = new Level(40000, \"WARN\");\n  Level.ERROR = new Level(50000, \"ERROR\");\n  Level.FATAL = new Level(60000, \"FATAL\");\n  Level.OFF = new Level(Number.MAX_VALUE, \"OFF\");\n  log4javascript.Level = Level;\n\n  function Timer(name, level) {\n    this.name = name;\n    this.level = isUndefined(level) ? Level.INFO : level;\n    this.start = new Date();\n  }\n\n  Timer.prototype.getElapsedTime = function () {\n    return new Date().getTime() - this.start.getTime();\n  };\n\n  var anonymousLoggerName = \"[anonymous]\";\n  var defaultLoggerName = \"[default]\";\n  var nullLoggerName = \"[null]\";\n  var rootLoggerName = \"root\";\n\n  function Logger(name) {\n    this.name = name;\n    this.parent = null;\n    this.children = [];\n    var appenders = [];\n    var loggerLevel = null;\n    var isRoot = this.name === rootLoggerName;\n    var isNull = this.name === nullLoggerName;\n    var appenderCache = null;\n    var appenderCacheInvalidated = false;\n\n    this.addChild = function (childLogger) {\n      this.children.push(childLogger);\n      childLogger.parent = this;\n      childLogger.invalidateAppenderCache();\n    };\n\n    var additive = true;\n\n    this.getAdditivity = function () {\n      return additive;\n    };\n\n    this.setAdditivity = function (additivity) {\n      var valueChanged = additive != additivity;\n      additive = additivity;\n\n      if (valueChanged) {\n        this.invalidateAppenderCache();\n      }\n    };\n\n    this.addAppender = function (appender) {\n      if (isNull) {\n        handleError(\"Logger.addAppender: you may not add an appender to the null logger\");\n      } else {\n        if (appender instanceof log4javascript.Appender) {\n          if (!array_contains(appenders, appender)) {\n            appenders.push(appender);\n            appender.setAddedToLogger(this);\n            this.invalidateAppenderCache();\n          }\n        } else {\n          handleError(\"Logger.addAppender: appender supplied ('\" + toStr(appender) + \"') is not a subclass of Appender\");\n        }\n      }\n    };\n\n    this.removeAppender = function (appender) {\n      array_remove(appenders, appender);\n      appender.setRemovedFromLogger(this);\n      this.invalidateAppenderCache();\n    };\n\n    this.removeAllAppenders = function () {\n      var appenderCount = appenders.length;\n\n      if (appenderCount > 0) {\n        for (var i = 0; i < appenderCount; i++) {\n          appenders[i].setRemovedFromLogger(this);\n        }\n\n        appenders.length = 0;\n        this.invalidateAppenderCache();\n      }\n    };\n\n    this.getEffectiveAppenders = function () {\n      if (appenderCache === null || appenderCacheInvalidated) {\n        var parentEffectiveAppenders = isRoot || !this.getAdditivity() ? [] : this.parent.getEffectiveAppenders();\n        appenderCache = parentEffectiveAppenders.concat(appenders);\n        appenderCacheInvalidated = false;\n      }\n\n      return appenderCache;\n    };\n\n    this.invalidateAppenderCache = function () {\n      appenderCacheInvalidated = true;\n\n      for (var i = 0, len = this.children.length; i < len; i++) {\n        this.children[i].invalidateAppenderCache();\n      }\n    };\n\n    this.log = function (level, params) {\n      if (enabled && level.isGreaterOrEqual(this.getEffectiveLevel())) {\n        var exception;\n        var finalParamIndex = params.length - 1;\n        var lastParam = params[finalParamIndex];\n\n        if (params.length > 1 && isError(lastParam)) {\n          exception = lastParam;\n          finalParamIndex--;\n        }\n\n        var messages = [];\n\n        for (var i = 0; i <= finalParamIndex; i++) {\n          messages[i] = params[i];\n        }\n\n        var loggingEvent = new LoggingEvent(this, new Date(), level, messages, exception);\n        this.callAppenders(loggingEvent);\n      }\n    };\n\n    this.callAppenders = function (loggingEvent) {\n      var effectiveAppenders = this.getEffectiveAppenders();\n\n      for (var i = 0, len = effectiveAppenders.length; i < len; i++) {\n        effectiveAppenders[i].doAppend(loggingEvent);\n      }\n    };\n\n    this.setLevel = function (level) {\n      if (isRoot && level === null) {\n        handleError(\"Logger.setLevel: you cannot set the level of the root logger to null\");\n      } else if (level instanceof Level) {\n        loggerLevel = level;\n      } else {\n        handleError(\"Logger.setLevel: level supplied to logger \" + this.name + \" is not an instance of log4javascript.Level\");\n      }\n    };\n\n    this.getLevel = function () {\n      return loggerLevel;\n    };\n\n    this.getEffectiveLevel = function () {\n      for (var logger = this; logger !== null; logger = logger.parent) {\n        var level = logger.getLevel();\n\n        if (level !== null) {\n          return level;\n        }\n      }\n    };\n\n    this.group = function (name, initiallyExpanded) {\n      if (enabled) {\n        var effectiveAppenders = this.getEffectiveAppenders();\n\n        for (var i = 0, len = effectiveAppenders.length; i < len; i++) {\n          effectiveAppenders[i].group(name, initiallyExpanded);\n        }\n      }\n    };\n\n    this.groupEnd = function () {\n      if (enabled) {\n        var effectiveAppenders = this.getEffectiveAppenders();\n\n        for (var i = 0, len = effectiveAppenders.length; i < len; i++) {\n          effectiveAppenders[i].groupEnd();\n        }\n      }\n    };\n\n    var timers = {};\n\n    this.time = function (name, level) {\n      if (enabled) {\n        if (isUndefined(name)) {\n          handleError(\"Logger.time: a name for the timer must be supplied\");\n        } else if (level && !(level instanceof Level)) {\n          handleError(\"Logger.time: level supplied to timer \" + name + \" is not an instance of log4javascript.Level\");\n        } else {\n          timers[name] = new Timer(name, level);\n        }\n      }\n    };\n\n    this.timeEnd = function (name) {\n      if (enabled) {\n        if (isUndefined(name)) {\n          handleError(\"Logger.timeEnd: a name for the timer must be supplied\");\n        } else if (timers[name]) {\n          var timer = timers[name];\n          var milliseconds = timer.getElapsedTime();\n          this.log(timer.level, [\"Timer \" + toStr(name) + \" completed in \" + milliseconds + \"ms\"]);\n          delete timers[name];\n        } else {\n          logLog.warn(\"Logger.timeEnd: no timer found with name \" + name);\n        }\n      }\n    };\n\n    this.assert = function (expr) {\n      if (enabled && !expr) {\n        var args = [];\n\n        for (var i = 1, len = arguments.length; i < len; i++) {\n          args.push(arguments[i]);\n        }\n\n        args = args.length > 0 ? args : [\"Assertion Failure\"];\n        args.push(newLine);\n        args.push(expr);\n        this.log(Level.ERROR, args);\n      }\n    };\n\n    this.toString = function () {\n      return \"Logger[\" + this.name + \"]\";\n    };\n  }\n\n  Logger.prototype = {\n    trace: function trace() {\n      this.log(Level.TRACE, arguments);\n    },\n    debug: function debug() {\n      this.log(Level.DEBUG, arguments);\n    },\n    info: function info() {\n      this.log(Level.INFO, arguments);\n    },\n    warn: function warn() {\n      this.log(Level.WARN, arguments);\n    },\n    error: function error() {\n      this.log(Level.ERROR, arguments);\n    },\n    fatal: function fatal() {\n      this.log(Level.FATAL, arguments);\n    },\n    isEnabledFor: function isEnabledFor(level) {\n      return level.isGreaterOrEqual(this.getEffectiveLevel());\n    },\n    isTraceEnabled: function isTraceEnabled() {\n      return this.isEnabledFor(Level.TRACE);\n    },\n    isDebugEnabled: function isDebugEnabled() {\n      return this.isEnabledFor(Level.DEBUG);\n    },\n    isInfoEnabled: function isInfoEnabled() {\n      return this.isEnabledFor(Level.INFO);\n    },\n    isWarnEnabled: function isWarnEnabled() {\n      return this.isEnabledFor(Level.WARN);\n    },\n    isErrorEnabled: function isErrorEnabled() {\n      return this.isEnabledFor(Level.ERROR);\n    },\n    isFatalEnabled: function isFatalEnabled() {\n      return this.isEnabledFor(Level.FATAL);\n    }\n  };\n  Logger.prototype.trace.isEntryPoint = true;\n  Logger.prototype.debug.isEntryPoint = true;\n  Logger.prototype.info.isEntryPoint = true;\n  Logger.prototype.warn.isEntryPoint = true;\n  Logger.prototype.error.isEntryPoint = true;\n  Logger.prototype.fatal.isEntryPoint = true;\n  var loggers = {};\n  var loggerNames = [];\n  var ROOT_LOGGER_DEFAULT_LEVEL = Level.DEBUG;\n  var rootLogger = new Logger(rootLoggerName);\n  rootLogger.setLevel(ROOT_LOGGER_DEFAULT_LEVEL);\n\n  log4javascript.getRootLogger = function () {\n    return rootLogger;\n  };\n\n  log4javascript.getLogger = function (loggerName) {\n    if (typeof loggerName != \"string\") {\n      loggerName = anonymousLoggerName;\n      logLog.warn(\"log4javascript.getLogger: non-string logger name \" + toStr(loggerName) + \" supplied, returning anonymous logger\");\n    }\n\n    if (loggerName == rootLoggerName) {\n      handleError(\"log4javascript.getLogger: root logger may not be obtained by name\");\n    }\n\n    if (!loggers[loggerName]) {\n      var logger = new Logger(loggerName);\n      loggers[loggerName] = logger;\n      loggerNames.push(loggerName);\n      var lastDotIndex = loggerName.lastIndexOf(\".\");\n      var parentLogger;\n\n      if (lastDotIndex > -1) {\n        var parentLoggerName = loggerName.substring(0, lastDotIndex);\n        parentLogger = log4javascript.getLogger(parentLoggerName);\n      } else {\n        parentLogger = rootLogger;\n      }\n\n      parentLogger.addChild(logger);\n    }\n\n    return loggers[loggerName];\n  };\n\n  var defaultLogger = null;\n\n  log4javascript.getDefaultLogger = function () {\n    if (!defaultLogger) {\n      defaultLogger = createDefaultLogger();\n    }\n\n    return defaultLogger;\n  };\n\n  var nullLogger = null;\n\n  log4javascript.getNullLogger = function () {\n    if (!nullLogger) {\n      nullLogger = new Logger(nullLoggerName);\n      nullLogger.setLevel(Level.OFF);\n    }\n\n    return nullLogger;\n  };\n\n  log4javascript.resetConfiguration = function () {\n    rootLogger.setLevel(ROOT_LOGGER_DEFAULT_LEVEL);\n    loggers = {};\n  };\n\n  var LoggingEvent = function LoggingEvent(logger, timeStamp, level, messages, exception) {\n    this.logger = logger;\n    this.timeStamp = timeStamp;\n    this.timeStampInMilliseconds = timeStamp.getTime();\n    this.timeStampInSeconds = Math.floor(this.timeStampInMilliseconds / 1000);\n    this.milliseconds = this.timeStamp.getMilliseconds();\n    this.level = level;\n    this.messages = messages;\n    this.exception = exception;\n  };\n\n  LoggingEvent.prototype = {\n    getThrowableStrRep: function getThrowableStrRep() {\n      return this.exception ? getExceptionStringRep(this.exception) : \"\";\n    },\n    getCombinedMessages: function getCombinedMessages() {\n      return this.messages.length == 1 ? this.messages[0] : this.messages.join(newLine);\n    },\n    toString: function toString() {\n      return \"LoggingEvent[\" + this.level + \"]\";\n    }\n  };\n  log4javascript.LoggingEvent = LoggingEvent;\n\n  var Layout = function Layout() {};\n\n  Layout.prototype = {\n    defaults: {\n      loggerKey: \"logger\",\n      timeStampKey: \"timestamp\",\n      millisecondsKey: \"milliseconds\",\n      levelKey: \"level\",\n      messageKey: \"message\",\n      exceptionKey: \"exception\",\n      urlKey: \"url\"\n    },\n    loggerKey: \"logger\",\n    timeStampKey: \"timestamp\",\n    millisecondsKey: \"milliseconds\",\n    levelKey: \"level\",\n    messageKey: \"message\",\n    exceptionKey: \"exception\",\n    urlKey: \"url\",\n    batchHeader: \"\",\n    batchFooter: \"\",\n    batchSeparator: \"\",\n    returnsPostData: false,\n    overrideTimeStampsSetting: false,\n    useTimeStampsInMilliseconds: null,\n    format: function format() {\n      handleError(\"Layout.format: layout supplied has no format() method\");\n    },\n    ignoresThrowable: function ignoresThrowable() {\n      handleError(\"Layout.ignoresThrowable: layout supplied has no ignoresThrowable() method\");\n    },\n    getContentType: function getContentType() {\n      return \"text/plain\";\n    },\n    allowBatching: function allowBatching() {\n      return true;\n    },\n    setTimeStampsInMilliseconds: function setTimeStampsInMilliseconds(timeStampsInMilliseconds) {\n      this.overrideTimeStampsSetting = true;\n      this.useTimeStampsInMilliseconds = bool(timeStampsInMilliseconds);\n    },\n    isTimeStampsInMilliseconds: function isTimeStampsInMilliseconds() {\n      return this.overrideTimeStampsSetting ? this.useTimeStampsInMilliseconds : useTimeStampsInMilliseconds;\n    },\n    getTimeStampValue: function getTimeStampValue(loggingEvent) {\n      return this.isTimeStampsInMilliseconds() ? loggingEvent.timeStampInMilliseconds : loggingEvent.timeStampInSeconds;\n    },\n    getDataValues: function getDataValues(loggingEvent, combineMessages) {\n      var dataValues = [[this.loggerKey, loggingEvent.logger.name], [this.timeStampKey, this.getTimeStampValue(loggingEvent)], [this.levelKey, loggingEvent.level.name], [this.urlKey, window.location.href], [this.messageKey, combineMessages ? loggingEvent.getCombinedMessages() : loggingEvent.messages]];\n\n      if (!this.isTimeStampsInMilliseconds()) {\n        dataValues.push([this.millisecondsKey, loggingEvent.milliseconds]);\n      }\n\n      if (loggingEvent.exception) {\n        dataValues.push([this.exceptionKey, getExceptionStringRep(loggingEvent.exception)]);\n      }\n\n      if (this.hasCustomFields()) {\n        for (var i = 0, len = this.customFields.length; i < len; i++) {\n          var val = this.customFields[i].value;\n\n          if (typeof val === \"function\") {\n            val = val(this, loggingEvent);\n          }\n\n          dataValues.push([this.customFields[i].name, val]);\n        }\n      }\n\n      return dataValues;\n    },\n    setKeys: function setKeys(loggerKey, timeStampKey, levelKey, messageKey, exceptionKey, urlKey, millisecondsKey) {\n      this.loggerKey = extractStringFromParam(loggerKey, this.defaults.loggerKey);\n      this.timeStampKey = extractStringFromParam(timeStampKey, this.defaults.timeStampKey);\n      this.levelKey = extractStringFromParam(levelKey, this.defaults.levelKey);\n      this.messageKey = extractStringFromParam(messageKey, this.defaults.messageKey);\n      this.exceptionKey = extractStringFromParam(exceptionKey, this.defaults.exceptionKey);\n      this.urlKey = extractStringFromParam(urlKey, this.defaults.urlKey);\n      this.millisecondsKey = extractStringFromParam(millisecondsKey, this.defaults.millisecondsKey);\n    },\n    setCustomField: function setCustomField(name, value) {\n      var fieldUpdated = false;\n\n      for (var i = 0, len = this.customFields.length; i < len; i++) {\n        if (this.customFields[i].name === name) {\n          this.customFields[i].value = value;\n          fieldUpdated = true;\n        }\n      }\n\n      if (!fieldUpdated) {\n        this.customFields.push({\n          \"name\": name,\n          \"value\": value\n        });\n      }\n    },\n    hasCustomFields: function hasCustomFields() {\n      return this.customFields.length > 0;\n    },\n    formatWithException: function formatWithException(loggingEvent) {\n      var formatted = this.format(loggingEvent);\n\n      if (loggingEvent.exception && this.ignoresThrowable()) {\n        formatted += loggingEvent.getThrowableStrRep();\n      }\n\n      return formatted;\n    },\n    toString: function toString() {\n      handleError(\"Layout.toString: all layouts must override this method\");\n    }\n  };\n  log4javascript.Layout = Layout;\n\n  var Appender = function Appender() {};\n\n  Appender.prototype = new EventSupport();\n  Appender.prototype.layout = new PatternLayout();\n  Appender.prototype.threshold = Level.ALL;\n  Appender.prototype.loggers = [];\n\n  Appender.prototype.doAppend = function (loggingEvent) {\n    if (enabled && loggingEvent.level.level >= this.threshold.level) {\n      this.append(loggingEvent);\n    }\n  };\n\n  Appender.prototype.append = function (loggingEvent) {};\n\n  Appender.prototype.setLayout = function (layout) {\n    if (layout instanceof Layout) {\n      this.layout = layout;\n    } else {\n      handleError(\"Appender.setLayout: layout supplied to \" + this.toString() + \" is not a subclass of Layout\");\n    }\n  };\n\n  Appender.prototype.getLayout = function () {\n    return this.layout;\n  };\n\n  Appender.prototype.setThreshold = function (threshold) {\n    if (threshold instanceof Level) {\n      this.threshold = threshold;\n    } else {\n      handleError(\"Appender.setThreshold: threshold supplied to \" + this.toString() + \" is not a subclass of Level\");\n    }\n  };\n\n  Appender.prototype.getThreshold = function () {\n    return this.threshold;\n  };\n\n  Appender.prototype.setAddedToLogger = function (logger) {\n    this.loggers.push(logger);\n  };\n\n  Appender.prototype.setRemovedFromLogger = function (logger) {\n    array_remove(this.loggers, logger);\n  };\n\n  Appender.prototype.group = emptyFunction;\n  Appender.prototype.groupEnd = emptyFunction;\n\n  Appender.prototype.toString = function () {\n    handleError(\"Appender.toString: all appenders must override this method\");\n  };\n\n  log4javascript.Appender = Appender;\n\n  function SimpleLayout() {\n    this.customFields = [];\n  }\n\n  SimpleLayout.prototype = new Layout();\n\n  SimpleLayout.prototype.format = function (loggingEvent) {\n    return loggingEvent.level.name + \" - \" + loggingEvent.getCombinedMessages();\n  };\n\n  SimpleLayout.prototype.ignoresThrowable = function () {\n    return true;\n  };\n\n  SimpleLayout.prototype.toString = function () {\n    return \"SimpleLayout\";\n  };\n\n  log4javascript.SimpleLayout = SimpleLayout;\n\n  function NullLayout() {\n    this.customFields = [];\n  }\n\n  NullLayout.prototype = new Layout();\n\n  NullLayout.prototype.format = function (loggingEvent) {\n    return loggingEvent.messages;\n  };\n\n  NullLayout.prototype.ignoresThrowable = function () {\n    return true;\n  };\n\n  NullLayout.prototype.formatWithException = function (loggingEvent) {\n    var messages = loggingEvent.messages,\n        ex = loggingEvent.exception;\n    return ex ? messages.concat([ex]) : messages;\n  };\n\n  NullLayout.prototype.toString = function () {\n    return \"NullLayout\";\n  };\n\n  log4javascript.NullLayout = NullLayout;\n\n  function XmlLayout(combineMessages) {\n    this.combineMessages = extractBooleanFromParam(combineMessages, true);\n    this.customFields = [];\n  }\n\n  XmlLayout.prototype = new Layout();\n\n  XmlLayout.prototype.isCombinedMessages = function () {\n    return this.combineMessages;\n  };\n\n  XmlLayout.prototype.getContentType = function () {\n    return \"text/xml\";\n  };\n\n  XmlLayout.prototype.escapeCdata = function (str) {\n    return str.replace(/\\]\\]>/, \"]]>]]&gt;<![CDATA[\");\n  };\n\n  XmlLayout.prototype.format = function (loggingEvent) {\n    var layout = this;\n    var i, len;\n\n    function formatMessage(message) {\n      message = typeof message === \"string\" ? message : toStr(message);\n      return \"<log4javascript:message><![CDATA[\" + layout.escapeCdata(message) + \"]]></log4javascript:message>\";\n    }\n\n    var str = \"<log4javascript:event logger=\\\"\" + loggingEvent.logger.name + \"\\\" timestamp=\\\"\" + this.getTimeStampValue(loggingEvent) + \"\\\"\";\n\n    if (!this.isTimeStampsInMilliseconds()) {\n      str += \" milliseconds=\\\"\" + loggingEvent.milliseconds + \"\\\"\";\n    }\n\n    str += \" level=\\\"\" + loggingEvent.level.name + \"\\\">\" + newLine;\n\n    if (this.combineMessages) {\n      str += formatMessage(loggingEvent.getCombinedMessages());\n    } else {\n      str += \"<log4javascript:messages>\" + newLine;\n\n      for (i = 0, len = loggingEvent.messages.length; i < len; i++) {\n        str += formatMessage(loggingEvent.messages[i]) + newLine;\n      }\n\n      str += \"</log4javascript:messages>\" + newLine;\n    }\n\n    if (this.hasCustomFields()) {\n      for (i = 0, len = this.customFields.length; i < len; i++) {\n        str += \"<log4javascript:customfield name=\\\"\" + this.customFields[i].name + \"\\\"><![CDATA[\" + this.customFields[i].value.toString() + \"]]></log4javascript:customfield>\" + newLine;\n      }\n    }\n\n    if (loggingEvent.exception) {\n      str += \"<log4javascript:exception><![CDATA[\" + getExceptionStringRep(loggingEvent.exception) + \"]]></log4javascript:exception>\" + newLine;\n    }\n\n    str += \"</log4javascript:event>\" + newLine + newLine;\n    return str;\n  };\n\n  XmlLayout.prototype.ignoresThrowable = function () {\n    return false;\n  };\n\n  XmlLayout.prototype.toString = function () {\n    return \"XmlLayout\";\n  };\n\n  log4javascript.XmlLayout = XmlLayout;\n\n  function escapeNewLines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, \"\\\\r\\\\n\");\n  }\n\n  function JsonLayout(readable, combineMessages) {\n    this.readable = extractBooleanFromParam(readable, false);\n    this.combineMessages = extractBooleanFromParam(combineMessages, true);\n    this.batchHeader = this.readable ? \"[\" + newLine : \"[\";\n    this.batchFooter = this.readable ? \"]\" + newLine : \"]\";\n    this.batchSeparator = this.readable ? \",\" + newLine : \",\";\n    this.setKeys();\n    this.colon = this.readable ? \": \" : \":\";\n    this.tab = this.readable ? \"\\t\" : \"\";\n    this.lineBreak = this.readable ? newLine : \"\";\n    this.customFields = [];\n  }\n\n  JsonLayout.prototype = new Layout();\n\n  JsonLayout.prototype.isReadable = function () {\n    return this.readable;\n  };\n\n  JsonLayout.prototype.isCombinedMessages = function () {\n    return this.combineMessages;\n  };\n\n  JsonLayout.prototype.format = function (loggingEvent) {\n    var layout = this;\n    var dataValues = this.getDataValues(loggingEvent, this.combineMessages);\n    var str = \"{\" + this.lineBreak;\n    var i, len;\n\n    function formatValue(val, prefix, expand) {\n      var formattedValue;\n      var valType = typeof val;\n\n      if (val instanceof Date) {\n        formattedValue = String(val.getTime());\n      } else if (expand && val instanceof Array) {\n        formattedValue = \"[\" + layout.lineBreak;\n\n        for (var i = 0, len = val.length; i < len; i++) {\n          var childPrefix = prefix + layout.tab;\n          formattedValue += childPrefix + formatValue(val[i], childPrefix, false);\n\n          if (i < val.length - 1) {\n            formattedValue += \",\";\n          }\n\n          formattedValue += layout.lineBreak;\n        }\n\n        formattedValue += prefix + \"]\";\n      } else if (valType !== \"number\" && valType !== \"boolean\") {\n        formattedValue = \"\\\"\" + escapeNewLines(toStr(val).replace(/\\\"/g, \"\\\\\\\"\")) + \"\\\"\";\n      } else {\n        formattedValue = val;\n      }\n\n      return formattedValue;\n    }\n\n    for (i = 0, len = dataValues.length - 1; i <= len; i++) {\n      str += this.tab + \"\\\"\" + dataValues[i][0] + \"\\\"\" + this.colon + formatValue(dataValues[i][1], this.tab, true);\n\n      if (i < len) {\n        str += \",\";\n      }\n\n      str += this.lineBreak;\n    }\n\n    str += \"}\" + this.lineBreak;\n    return str;\n  };\n\n  JsonLayout.prototype.ignoresThrowable = function () {\n    return false;\n  };\n\n  JsonLayout.prototype.toString = function () {\n    return \"JsonLayout\";\n  };\n\n  JsonLayout.prototype.getContentType = function () {\n    return \"application/json\";\n  };\n\n  log4javascript.JsonLayout = JsonLayout;\n\n  function HttpPostDataLayout() {\n    this.setKeys();\n    this.customFields = [];\n    this.returnsPostData = true;\n  }\n\n  HttpPostDataLayout.prototype = new Layout();\n\n  HttpPostDataLayout.prototype.allowBatching = function () {\n    return false;\n  };\n\n  HttpPostDataLayout.prototype.format = function (loggingEvent) {\n    var dataValues = this.getDataValues(loggingEvent);\n    var queryBits = [];\n\n    for (var i = 0, len = dataValues.length; i < len; i++) {\n      var val = dataValues[i][1] instanceof Date ? String(dataValues[i][1].getTime()) : dataValues[i][1];\n      queryBits.push(urlEncode(dataValues[i][0]) + \"=\" + urlEncode(val));\n    }\n\n    return queryBits.join(\"&\");\n  };\n\n  HttpPostDataLayout.prototype.ignoresThrowable = function (loggingEvent) {\n    return false;\n  };\n\n  HttpPostDataLayout.prototype.toString = function () {\n    return \"HttpPostDataLayout\";\n  };\n\n  log4javascript.HttpPostDataLayout = HttpPostDataLayout;\n\n  function formatObjectExpansion(obj, depth, indentation) {\n    var objectsExpanded = [];\n\n    function doFormat(obj, depth, indentation) {\n      var i, len, childDepth, childIndentation, childLines, expansion, childExpansion;\n\n      if (!indentation) {\n        indentation = \"\";\n      }\n\n      function formatString(text) {\n        var lines = splitIntoLines(text);\n\n        for (var j = 1, jLen = lines.length; j < jLen; j++) {\n          lines[j] = indentation + lines[j];\n        }\n\n        return lines.join(newLine);\n      }\n\n      if (obj === null) {\n        return \"null\";\n      } else if (typeof obj == \"undefined\") {\n        return \"undefined\";\n      } else if (typeof obj == \"string\") {\n        return formatString(obj);\n      } else if (typeof obj == \"object\" && array_contains(objectsExpanded, obj)) {\n        try {\n          expansion = toStr(obj);\n        } catch (ex) {\n          expansion = \"Error formatting property. Details: \" + getExceptionStringRep(ex);\n        }\n\n        return expansion + \" [already expanded]\";\n      } else if (obj instanceof Array && depth > 0) {\n        objectsExpanded.push(obj);\n        expansion = \"[\" + newLine;\n        childDepth = depth - 1;\n        childIndentation = indentation + \"  \";\n        childLines = [];\n\n        for (i = 0, len = obj.length; i < len; i++) {\n          try {\n            childExpansion = doFormat(obj[i], childDepth, childIndentation);\n            childLines.push(childIndentation + childExpansion);\n          } catch (ex) {\n            childLines.push(childIndentation + \"Error formatting array member. Details: \" + getExceptionStringRep(ex) + \"\");\n          }\n        }\n\n        expansion += childLines.join(\",\" + newLine) + newLine + indentation + \"]\";\n        return expansion;\n      } else if (Object.prototype.toString.call(obj) == \"[object Date]\") {\n        return obj.toString();\n      } else if (typeof obj == \"object\" && depth > 0) {\n        objectsExpanded.push(obj);\n        expansion = \"{\" + newLine;\n        childDepth = depth - 1;\n        childIndentation = indentation + \"  \";\n        childLines = [];\n\n        for (i in obj) {\n          try {\n            childExpansion = doFormat(obj[i], childDepth, childIndentation);\n            childLines.push(childIndentation + i + \": \" + childExpansion);\n          } catch (ex) {\n            childLines.push(childIndentation + i + \": Error formatting property. Details: \" + getExceptionStringRep(ex));\n          }\n        }\n\n        expansion += childLines.join(\",\" + newLine) + newLine + indentation + \"}\";\n        return expansion;\n      } else {\n        return formatString(toStr(obj));\n      }\n    }\n\n    return doFormat(obj, depth, indentation);\n  }\n\n  var SimpleDateFormat;\n\n  (function () {\n    var regex = /('[^']*')|(G+|y+|M+|w+|W+|D+|d+|F+|E+|a+|H+|k+|K+|h+|m+|s+|S+|Z+)|([a-zA-Z]+)|([^a-zA-Z']+)/;\n    var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    var TEXT2 = 0,\n        TEXT3 = 1,\n        NUMBER = 2,\n        YEAR = 3,\n        MONTH = 4,\n        TIMEZONE = 5;\n    var types = {\n      G: TEXT2,\n      y: YEAR,\n      M: MONTH,\n      w: NUMBER,\n      W: NUMBER,\n      D: NUMBER,\n      d: NUMBER,\n      F: NUMBER,\n      E: TEXT3,\n      a: TEXT2,\n      H: NUMBER,\n      k: NUMBER,\n      K: NUMBER,\n      h: NUMBER,\n      m: NUMBER,\n      s: NUMBER,\n      S: NUMBER,\n      Z: TIMEZONE\n    };\n    var ONE_DAY = 24 * 60 * 60 * 1000;\n    var ONE_WEEK = 7 * ONE_DAY;\n    var DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK = 1;\n\n    var newDateAtMidnight = function newDateAtMidnight(year, month, day) {\n      var d = new Date(year, month, day, 0, 0, 0);\n      d.setMilliseconds(0);\n      return d;\n    };\n\n    Date.prototype.getDifference = function (date) {\n      return this.getTime() - date.getTime();\n    };\n\n    Date.prototype.isBefore = function (d) {\n      return this.getTime() < d.getTime();\n    };\n\n    Date.prototype.getUTCTime = function () {\n      return Date.UTC(this.getFullYear(), this.getMonth(), this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), this.getMilliseconds());\n    };\n\n    Date.prototype.getTimeSince = function (d) {\n      return this.getUTCTime() - d.getUTCTime();\n    };\n\n    Date.prototype.getPreviousSunday = function () {\n      var midday = new Date(this.getFullYear(), this.getMonth(), this.getDate(), 12, 0, 0);\n      var previousSunday = new Date(midday.getTime() - this.getDay() * ONE_DAY);\n      return newDateAtMidnight(previousSunday.getFullYear(), previousSunday.getMonth(), previousSunday.getDate());\n    };\n\n    Date.prototype.getWeekInYear = function (minimalDaysInFirstWeek) {\n      if (isUndefined(this.minimalDaysInFirstWeek)) {\n        minimalDaysInFirstWeek = DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK;\n      }\n\n      var previousSunday = this.getPreviousSunday();\n      var startOfYear = newDateAtMidnight(this.getFullYear(), 0, 1);\n      var numberOfSundays = previousSunday.isBefore(startOfYear) ? 0 : 1 + Math.floor(previousSunday.getTimeSince(startOfYear) / ONE_WEEK);\n      var numberOfDaysInFirstWeek = 7 - startOfYear.getDay();\n      var weekInYear = numberOfSundays;\n\n      if (numberOfDaysInFirstWeek < minimalDaysInFirstWeek) {\n        weekInYear--;\n      }\n\n      return weekInYear;\n    };\n\n    Date.prototype.getWeekInMonth = function (minimalDaysInFirstWeek) {\n      if (isUndefined(this.minimalDaysInFirstWeek)) {\n        minimalDaysInFirstWeek = DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK;\n      }\n\n      var previousSunday = this.getPreviousSunday();\n      var startOfMonth = newDateAtMidnight(this.getFullYear(), this.getMonth(), 1);\n      var numberOfSundays = previousSunday.isBefore(startOfMonth) ? 0 : 1 + Math.floor(previousSunday.getTimeSince(startOfMonth) / ONE_WEEK);\n      var numberOfDaysInFirstWeek = 7 - startOfMonth.getDay();\n      var weekInMonth = numberOfSundays;\n\n      if (numberOfDaysInFirstWeek >= minimalDaysInFirstWeek) {\n        weekInMonth++;\n      }\n\n      return weekInMonth;\n    };\n\n    Date.prototype.getDayInYear = function () {\n      var startOfYear = newDateAtMidnight(this.getFullYear(), 0, 1);\n      return 1 + Math.floor(this.getTimeSince(startOfYear) / ONE_DAY);\n    };\n\n    SimpleDateFormat = function SimpleDateFormat(formatString) {\n      this.formatString = formatString;\n    };\n\n    SimpleDateFormat.prototype.setMinimalDaysInFirstWeek = function (days) {\n      this.minimalDaysInFirstWeek = days;\n    };\n\n    SimpleDateFormat.prototype.getMinimalDaysInFirstWeek = function () {\n      return isUndefined(this.minimalDaysInFirstWeek) ? DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK : this.minimalDaysInFirstWeek;\n    };\n\n    var padWithZeroes = function padWithZeroes(str, len) {\n      while (str.length < len) {\n        str = \"0\" + str;\n      }\n\n      return str;\n    };\n\n    var formatText = function formatText(data, numberOfLetters, minLength) {\n      return numberOfLetters >= 4 ? data : data.substr(0, Math.max(minLength, numberOfLetters));\n    };\n\n    var formatNumber = function formatNumber(data, numberOfLetters) {\n      var dataString = \"\" + data;\n      return padWithZeroes(dataString, numberOfLetters);\n    };\n\n    SimpleDateFormat.prototype.format = function (date) {\n      var formattedString = \"\";\n      var result;\n      var searchString = this.formatString;\n\n      while (result = regex.exec(searchString)) {\n        var quotedString = result[1];\n        var patternLetters = result[2];\n        var otherLetters = result[3];\n        var otherCharacters = result[4];\n\n        if (quotedString) {\n          if (quotedString == \"''\") {\n            formattedString += \"'\";\n          } else {\n            formattedString += quotedString.substring(1, quotedString.length - 1);\n          }\n        } else if (otherLetters) {} else if (otherCharacters) {\n          formattedString += otherCharacters;\n        } else if (patternLetters) {\n          var patternLetter = patternLetters.charAt(0);\n          var numberOfLetters = patternLetters.length;\n          var rawData = \"\";\n\n          switch (patternLetter) {\n            case \"G\":\n              rawData = \"AD\";\n              break;\n\n            case \"y\":\n              rawData = date.getFullYear();\n              break;\n\n            case \"M\":\n              rawData = date.getMonth();\n              break;\n\n            case \"w\":\n              rawData = date.getWeekInYear(this.getMinimalDaysInFirstWeek());\n              break;\n\n            case \"W\":\n              rawData = date.getWeekInMonth(this.getMinimalDaysInFirstWeek());\n              break;\n\n            case \"D\":\n              rawData = date.getDayInYear();\n              break;\n\n            case \"d\":\n              rawData = date.getDate();\n              break;\n\n            case \"F\":\n              rawData = 1 + Math.floor((date.getDate() - 1) / 7);\n              break;\n\n            case \"E\":\n              rawData = dayNames[date.getDay()];\n              break;\n\n            case \"a\":\n              rawData = date.getHours() >= 12 ? \"PM\" : \"AM\";\n              break;\n\n            case \"H\":\n              rawData = date.getHours();\n              break;\n\n            case \"k\":\n              rawData = date.getHours() || 24;\n              break;\n\n            case \"K\":\n              rawData = date.getHours() % 12;\n              break;\n\n            case \"h\":\n              rawData = date.getHours() % 12 || 12;\n              break;\n\n            case \"m\":\n              rawData = date.getMinutes();\n              break;\n\n            case \"s\":\n              rawData = date.getSeconds();\n              break;\n\n            case \"S\":\n              rawData = date.getMilliseconds();\n              break;\n\n            case \"Z\":\n              rawData = date.getTimezoneOffset();\n              break;\n          }\n\n          switch (types[patternLetter]) {\n            case TEXT2:\n              formattedString += formatText(rawData, numberOfLetters, 2);\n              break;\n\n            case TEXT3:\n              formattedString += formatText(rawData, numberOfLetters, 3);\n              break;\n\n            case NUMBER:\n              formattedString += formatNumber(rawData, numberOfLetters);\n              break;\n\n            case YEAR:\n              if (numberOfLetters <= 3) {\n                var dataString = \"\" + rawData;\n                formattedString += dataString.substr(2, 2);\n              } else {\n                formattedString += formatNumber(rawData, numberOfLetters);\n              }\n\n              break;\n\n            case MONTH:\n              if (numberOfLetters >= 3) {\n                formattedString += formatText(monthNames[rawData], numberOfLetters, numberOfLetters);\n              } else {\n                formattedString += formatNumber(rawData + 1, numberOfLetters);\n              }\n\n              break;\n\n            case TIMEZONE:\n              var isPositive = rawData > 0;\n              var prefix = isPositive ? \"-\" : \"+\";\n              var absData = Math.abs(rawData);\n              var hours = \"\" + Math.floor(absData / 60);\n              hours = padWithZeroes(hours, 2);\n              var minutes = \"\" + absData % 60;\n              minutes = padWithZeroes(minutes, 2);\n              formattedString += prefix + hours + minutes;\n              break;\n          }\n        }\n\n        searchString = searchString.substr(result.index + result[0].length);\n      }\n\n      return formattedString;\n    };\n  })();\n\n  log4javascript.SimpleDateFormat = SimpleDateFormat;\n\n  function PatternLayout(pattern) {\n    if (pattern) {\n      this.pattern = pattern;\n    } else {\n      this.pattern = PatternLayout.DEFAULT_CONVERSION_PATTERN;\n    }\n\n    this.customFields = [];\n  }\n\n  PatternLayout.TTCC_CONVERSION_PATTERN = \"%r %p %c - %m%n\";\n  PatternLayout.DEFAULT_CONVERSION_PATTERN = \"%m%n\";\n  PatternLayout.ISO8601_DATEFORMAT = \"yyyy-MM-dd HH:mm:ss,SSS\";\n  PatternLayout.DATETIME_DATEFORMAT = \"dd MMM yyyy HH:mm:ss,SSS\";\n  PatternLayout.ABSOLUTETIME_DATEFORMAT = \"HH:mm:ss,SSS\";\n  PatternLayout.prototype = new Layout();\n\n  PatternLayout.prototype.format = function (loggingEvent) {\n    var regex = /%(-?[0-9]+)?(\\.?[0-9]+)?([acdfmMnpr%])(\\{([^\\}]+)\\})?|([^%]+)/;\n    var formattedString = \"\";\n    var result;\n    var searchString = this.pattern;\n\n    while (result = regex.exec(searchString)) {\n      var matchedString = result[0];\n      var padding = result[1];\n      var truncation = result[2];\n      var conversionCharacter = result[3];\n      var specifier = result[5];\n      var text = result[6];\n\n      if (text) {\n        formattedString += \"\" + text;\n      } else {\n        var replacement = \"\";\n\n        switch (conversionCharacter) {\n          case \"a\":\n          case \"m\":\n            var depth = 0;\n\n            if (specifier) {\n              depth = parseInt(specifier, 10);\n\n              if (isNaN(depth)) {\n                handleError(\"PatternLayout.format: invalid specifier '\" + specifier + \"' for conversion character '\" + conversionCharacter + \"' - should be a number\");\n                depth = 0;\n              }\n            }\n\n            var messages = conversionCharacter === \"a\" ? loggingEvent.messages[0] : loggingEvent.messages;\n\n            for (var i = 0, len = messages.length; i < len; i++) {\n              if (i > 0 && replacement.charAt(replacement.length - 1) !== \" \") {\n                replacement += \" \";\n              }\n\n              if (depth === 0) {\n                replacement += messages[i];\n              } else {\n                replacement += formatObjectExpansion(messages[i], depth);\n              }\n            }\n\n            break;\n\n          case \"c\":\n            var loggerName = loggingEvent.logger.name;\n\n            if (specifier) {\n              var precision = parseInt(specifier, 10);\n              var loggerNameBits = loggingEvent.logger.name.split(\".\");\n\n              if (precision >= loggerNameBits.length) {\n                replacement = loggerName;\n              } else {\n                replacement = loggerNameBits.slice(loggerNameBits.length - precision).join(\".\");\n              }\n            } else {\n              replacement = loggerName;\n            }\n\n            break;\n\n          case \"d\":\n            var dateFormat = PatternLayout.ISO8601_DATEFORMAT;\n\n            if (specifier) {\n              dateFormat = specifier;\n\n              if (dateFormat == \"ISO8601\") {\n                dateFormat = PatternLayout.ISO8601_DATEFORMAT;\n              } else if (dateFormat == \"ABSOLUTE\") {\n                dateFormat = PatternLayout.ABSOLUTETIME_DATEFORMAT;\n              } else if (dateFormat == \"DATE\") {\n                dateFormat = PatternLayout.DATETIME_DATEFORMAT;\n              }\n            }\n\n            replacement = new SimpleDateFormat(dateFormat).format(loggingEvent.timeStamp);\n            break;\n\n          case \"f\":\n            if (this.hasCustomFields()) {\n              var fieldIndex = 0;\n\n              if (specifier) {\n                fieldIndex = parseInt(specifier, 10);\n\n                if (isNaN(fieldIndex)) {\n                  handleError(\"PatternLayout.format: invalid specifier '\" + specifier + \"' for conversion character 'f' - should be a number\");\n                } else if (fieldIndex === 0) {\n                  handleError(\"PatternLayout.format: invalid specifier '\" + specifier + \"' for conversion character 'f' - must be greater than zero\");\n                } else if (fieldIndex > this.customFields.length) {\n                  handleError(\"PatternLayout.format: invalid specifier '\" + specifier + \"' for conversion character 'f' - there aren't that many custom fields\");\n                } else {\n                  fieldIndex = fieldIndex - 1;\n                }\n              }\n\n              var val = this.customFields[fieldIndex].value;\n\n              if (typeof val == \"function\") {\n                val = val(this, loggingEvent);\n              }\n\n              replacement = val;\n            }\n\n            break;\n\n          case \"n\":\n            replacement = newLine;\n            break;\n\n          case \"p\":\n            replacement = loggingEvent.level.name;\n            break;\n\n          case \"r\":\n            replacement = \"\" + loggingEvent.timeStamp.getDifference(applicationStartDate);\n            break;\n\n          case \"%\":\n            replacement = \"%\";\n            break;\n\n          default:\n            replacement = matchedString;\n            break;\n        }\n\n        var l;\n\n        if (truncation) {\n          l = parseInt(truncation.substr(1), 10);\n          var strLen = replacement.length;\n\n          if (l < strLen) {\n            replacement = replacement.substring(strLen - l, strLen);\n          }\n        }\n\n        if (padding) {\n          if (padding.charAt(0) == \"-\") {\n            l = parseInt(padding.substr(1), 10);\n\n            while (replacement.length < l) {\n              replacement += \" \";\n            }\n          } else {\n            l = parseInt(padding, 10);\n\n            while (replacement.length < l) {\n              replacement = \" \" + replacement;\n            }\n          }\n        }\n\n        formattedString += replacement;\n      }\n\n      searchString = searchString.substr(result.index + result[0].length);\n    }\n\n    return formattedString;\n  };\n\n  PatternLayout.prototype.ignoresThrowable = function () {\n    return true;\n  };\n\n  PatternLayout.prototype.toString = function () {\n    return \"PatternLayout\";\n  };\n\n  log4javascript.PatternLayout = PatternLayout;\n\n  function AlertAppender() {}\n\n  AlertAppender.prototype = new Appender();\n  AlertAppender.prototype.layout = new SimpleLayout();\n\n  AlertAppender.prototype.append = function (loggingEvent) {\n    alert(this.getLayout().formatWithException(loggingEvent));\n  };\n\n  AlertAppender.prototype.toString = function () {\n    return \"AlertAppender\";\n  };\n\n  log4javascript.AlertAppender = AlertAppender;\n\n  function BrowserConsoleAppender() {}\n\n  BrowserConsoleAppender.prototype = new log4javascript.Appender();\n  BrowserConsoleAppender.prototype.layout = new NullLayout();\n  BrowserConsoleAppender.prototype.threshold = Level.DEBUG;\n\n  BrowserConsoleAppender.prototype.append = function (loggingEvent) {\n    var appender = this;\n\n    var getFormattedMessage = function getFormattedMessage(concatenate) {\n      var formattedMessage = appender.getLayout().formatWithException(loggingEvent);\n      return typeof formattedMessage == \"string\" ? concatenate ? formattedMessage : [formattedMessage] : concatenate ? formattedMessage.join(\" \") : formattedMessage;\n    };\n\n    var console = window.console;\n\n    if (console && console.log) {\n      var consoleMethodName;\n\n      if (console.debug && Level.DEBUG.isGreaterOrEqual(loggingEvent.level)) {\n        consoleMethodName = \"debug\";\n      } else if (console.info && Level.INFO.equals(loggingEvent.level)) {\n        consoleMethodName = \"info\";\n      } else if (console.warn && Level.WARN.equals(loggingEvent.level)) {\n        consoleMethodName = \"warn\";\n      } else if (console.error && loggingEvent.level.isGreaterOrEqual(Level.ERROR)) {\n        consoleMethodName = \"error\";\n      } else {\n        consoleMethodName = \"log\";\n      }\n\n      if (typeof console[consoleMethodName].apply == \"function\") {\n        console[consoleMethodName].apply(console, getFormattedMessage(false));\n      } else {\n        console[consoleMethodName](getFormattedMessage(true));\n      }\n    } else if (typeof opera != \"undefined\" && opera.postError) {\n      opera.postError(getFormattedMessage(true));\n    }\n  };\n\n  BrowserConsoleAppender.prototype.group = function (name) {\n    if (window.console && window.console.group) {\n      window.console.group(name);\n    }\n  };\n\n  BrowserConsoleAppender.prototype.groupEnd = function () {\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  };\n\n  BrowserConsoleAppender.prototype.toString = function () {\n    return \"BrowserConsoleAppender\";\n  };\n\n  log4javascript.BrowserConsoleAppender = BrowserConsoleAppender;\n\n  var xhrFactory = function xhrFactory() {\n    return new XMLHttpRequest();\n  };\n\n  var xmlHttpFactories = [xhrFactory, function () {\n    return new ActiveXObject(\"Msxml2.XMLHTTP\");\n  }, function () {\n    return new ActiveXObject(\"Microsoft.XMLHTTP\");\n  }];\n  var withCredentialsSupported = false;\n\n  var _getXmlHttp = function getXmlHttp(errorHandler) {\n    var xmlHttp = null,\n        factory;\n\n    for (var i = 0, len = xmlHttpFactories.length; i < len; i++) {\n      factory = xmlHttpFactories[i];\n\n      try {\n        xmlHttp = factory();\n        withCredentialsSupported = factory == xhrFactory && \"withCredentials\" in xmlHttp;\n        _getXmlHttp = factory;\n        return xmlHttp;\n      } catch (e) {}\n    }\n\n    if (errorHandler) {\n      errorHandler();\n    } else {\n      handleError(\"getXmlHttp: unable to obtain XMLHttpRequest object\");\n    }\n  };\n\n  function isHttpRequestSuccessful(xmlHttp) {\n    return isUndefined(xmlHttp.status) || xmlHttp.status === 0 || xmlHttp.status >= 200 && xmlHttp.status < 300 || xmlHttp.status == 1223;\n  }\n\n  function AjaxAppender(url, withCredentials) {\n    var appender = this;\n    var isSupported = true;\n\n    if (!url) {\n      handleError(\"AjaxAppender: URL must be specified in constructor\");\n      isSupported = false;\n    }\n\n    var timed = this.defaults.timed;\n    var waitForResponse = this.defaults.waitForResponse;\n    var batchSize = this.defaults.batchSize;\n    var timerInterval = this.defaults.timerInterval;\n    var requestSuccessCallback = this.defaults.requestSuccessCallback;\n    var failCallback = this.defaults.failCallback;\n    var postVarName = this.defaults.postVarName;\n    var sendAllOnUnload = this.defaults.sendAllOnUnload;\n    var contentType = this.defaults.contentType;\n    var sessionId = null;\n    var queuedLoggingEvents = [];\n    var queuedRequests = [];\n    var headers = [];\n    var sending = false;\n    var initialized = false;\n\n    function checkCanConfigure(configOptionName) {\n      if (initialized) {\n        handleError(\"AjaxAppender: configuration option '\" + configOptionName + \"' may not be set after the appender has been initialized\");\n        return false;\n      }\n\n      return true;\n    }\n\n    this.getSessionId = function () {\n      return sessionId;\n    };\n\n    this.setSessionId = function (sessionIdParam) {\n      sessionId = extractStringFromParam(sessionIdParam, null);\n      this.layout.setCustomField(\"sessionid\", sessionId);\n    };\n\n    this.setLayout = function (layoutParam) {\n      if (checkCanConfigure(\"layout\")) {\n        this.layout = layoutParam;\n\n        if (sessionId !== null) {\n          this.setSessionId(sessionId);\n        }\n      }\n    };\n\n    this.isTimed = function () {\n      return timed;\n    };\n\n    this.setTimed = function (timedParam) {\n      if (checkCanConfigure(\"timed\")) {\n        timed = bool(timedParam);\n      }\n    };\n\n    this.getTimerInterval = function () {\n      return timerInterval;\n    };\n\n    this.setTimerInterval = function (timerIntervalParam) {\n      if (checkCanConfigure(\"timerInterval\")) {\n        timerInterval = extractIntFromParam(timerIntervalParam, timerInterval);\n      }\n    };\n\n    this.isWaitForResponse = function () {\n      return waitForResponse;\n    };\n\n    this.setWaitForResponse = function (waitForResponseParam) {\n      if (checkCanConfigure(\"waitForResponse\")) {\n        waitForResponse = bool(waitForResponseParam);\n      }\n    };\n\n    this.getBatchSize = function () {\n      return batchSize;\n    };\n\n    this.setBatchSize = function (batchSizeParam) {\n      if (checkCanConfigure(\"batchSize\")) {\n        batchSize = extractIntFromParam(batchSizeParam, batchSize);\n      }\n    };\n\n    this.isSendAllOnUnload = function () {\n      return sendAllOnUnload;\n    };\n\n    this.setSendAllOnUnload = function (sendAllOnUnloadParam) {\n      if (checkCanConfigure(\"sendAllOnUnload\")) {\n        sendAllOnUnload = extractBooleanFromParam(sendAllOnUnloadParam, sendAllOnUnload);\n      }\n    };\n\n    this.setRequestSuccessCallback = function (requestSuccessCallbackParam) {\n      requestSuccessCallback = extractFunctionFromParam(requestSuccessCallbackParam, requestSuccessCallback);\n    };\n\n    this.setFailCallback = function (failCallbackParam) {\n      failCallback = extractFunctionFromParam(failCallbackParam, failCallback);\n    };\n\n    this.getPostVarName = function () {\n      return postVarName;\n    };\n\n    this.setPostVarName = function (postVarNameParam) {\n      if (checkCanConfigure(\"postVarName\")) {\n        postVarName = extractStringFromParam(postVarNameParam, postVarName);\n      }\n    };\n\n    this.getHeaders = function () {\n      return headers;\n    };\n\n    this.addHeader = function (name, value) {\n      if (name.toLowerCase() == \"content-type\") {\n        contentType = value;\n      } else {\n        headers.push({\n          name: name,\n          value: value\n        });\n      }\n    };\n\n    function sendAll() {\n      if (isSupported && enabled) {\n        sending = true;\n        var currentRequestBatch;\n\n        if (waitForResponse) {\n          if (queuedRequests.length > 0) {\n            currentRequestBatch = queuedRequests.shift();\n            sendRequest(preparePostData(currentRequestBatch), sendAll);\n          } else {\n            sending = false;\n\n            if (timed) {\n              scheduleSending();\n            }\n          }\n        } else {\n          while (currentRequestBatch = queuedRequests.shift()) {\n            sendRequest(preparePostData(currentRequestBatch));\n          }\n\n          sending = false;\n\n          if (timed) {\n            scheduleSending();\n          }\n        }\n      }\n    }\n\n    this.sendAll = sendAll;\n\n    function sendAllRemaining() {\n      var sendingAnything = false;\n\n      if (isSupported && enabled) {\n        var actualBatchSize = appender.getLayout().allowBatching() ? batchSize : 1;\n        var currentLoggingEvent;\n        var batchedLoggingEvents = [];\n\n        while (currentLoggingEvent = queuedLoggingEvents.shift()) {\n          batchedLoggingEvents.push(currentLoggingEvent);\n\n          if (queuedLoggingEvents.length >= actualBatchSize) {\n            queuedRequests.push(batchedLoggingEvents);\n            batchedLoggingEvents = [];\n          }\n        }\n\n        if (batchedLoggingEvents.length > 0) {\n          queuedRequests.push(batchedLoggingEvents);\n        }\n\n        sendingAnything = queuedRequests.length > 0;\n        waitForResponse = false;\n        timed = false;\n        sendAll();\n      }\n\n      return sendingAnything;\n    }\n\n    this.sendAllRemaining = sendAllRemaining;\n\n    function preparePostData(batchedLoggingEvents) {\n      var formattedMessages = [];\n      var currentLoggingEvent;\n      var postData = \"\";\n\n      while (currentLoggingEvent = batchedLoggingEvents.shift()) {\n        formattedMessages.push(appender.getLayout().formatWithException(currentLoggingEvent));\n      }\n\n      if (batchedLoggingEvents.length == 1) {\n        postData = formattedMessages.join(\"\");\n      } else {\n        postData = appender.getLayout().batchHeader + formattedMessages.join(appender.getLayout().batchSeparator) + appender.getLayout().batchFooter;\n      }\n\n      if (contentType == appender.defaults.contentType) {\n        postData = appender.getLayout().returnsPostData ? postData : urlEncode(postVarName) + \"=\" + urlEncode(postData);\n\n        if (postData.length > 0) {\n          postData += \"&\";\n        }\n\n        postData += \"layout=\" + urlEncode(appender.getLayout().toString());\n      }\n\n      return postData;\n    }\n\n    function scheduleSending() {\n      window.setTimeout(sendAll, timerInterval);\n    }\n\n    function xmlHttpErrorHandler() {\n      var msg = \"AjaxAppender: could not create XMLHttpRequest object. AjaxAppender disabled\";\n      handleError(msg);\n      isSupported = false;\n\n      if (failCallback) {\n        failCallback(msg);\n      }\n    }\n\n    function sendRequest(postData, successCallback) {\n      try {\n        var xmlHttp = _getXmlHttp(xmlHttpErrorHandler);\n\n        if (isSupported) {\n          xmlHttp.onreadystatechange = function () {\n            if (xmlHttp.readyState == 4) {\n              if (isHttpRequestSuccessful(xmlHttp)) {\n                if (requestSuccessCallback) {\n                  requestSuccessCallback(xmlHttp);\n                }\n\n                if (successCallback) {\n                  successCallback(xmlHttp);\n                }\n              } else {\n                var msg = \"AjaxAppender.append: XMLHttpRequest request to URL \" + url + \" returned status code \" + xmlHttp.status;\n                handleError(msg);\n\n                if (failCallback) {\n                  failCallback(msg);\n                }\n              }\n\n              xmlHttp.onreadystatechange = emptyFunction;\n              xmlHttp = null;\n            }\n          };\n\n          xmlHttp.open(\"POST\", url, true);\n\n          if (withCredentials && withCredentialsSupported) {\n            xmlHttp.withCredentials = true;\n          }\n\n          try {\n            for (var i = 0, header; header = headers[i++];) {\n              xmlHttp.setRequestHeader(header.name, header.value);\n            }\n\n            xmlHttp.setRequestHeader(\"Content-Type\", contentType);\n          } catch (headerEx) {\n            var msg = \"AjaxAppender.append: your browser's XMLHttpRequest implementation\" + \" does not support setRequestHeader, therefore cannot post data. AjaxAppender disabled\";\n            handleError(msg);\n            isSupported = false;\n\n            if (failCallback) {\n              failCallback(msg);\n            }\n\n            return;\n          }\n\n          xmlHttp.send(postData);\n        }\n      } catch (ex) {\n        var errMsg = \"AjaxAppender.append: error sending log message to \" + url;\n        handleError(errMsg, ex);\n        isSupported = false;\n\n        if (failCallback) {\n          failCallback(errMsg + \". Details: \" + getExceptionStringRep(ex));\n        }\n      }\n    }\n\n    this.append = function (loggingEvent) {\n      if (isSupported) {\n        if (!initialized) {\n          init();\n        }\n\n        queuedLoggingEvents.push(loggingEvent);\n        var actualBatchSize = this.getLayout().allowBatching() ? batchSize : 1;\n\n        if (queuedLoggingEvents.length >= actualBatchSize) {\n          var currentLoggingEvent;\n          var batchedLoggingEvents = [];\n\n          while (currentLoggingEvent = queuedLoggingEvents.shift()) {\n            batchedLoggingEvents.push(currentLoggingEvent);\n          }\n\n          queuedRequests.push(batchedLoggingEvents);\n\n          if (!timed && (!waitForResponse || waitForResponse && !sending)) {\n            sendAll();\n          }\n        }\n      }\n    };\n\n    function init() {\n      initialized = true;\n\n      if (sendAllOnUnload) {\n        var oldBeforeUnload = window.onbeforeunload;\n\n        window.onbeforeunload = function () {\n          if (oldBeforeUnload) {\n            oldBeforeUnload();\n          }\n\n          sendAllRemaining();\n        };\n      }\n\n      if (timed) {\n        scheduleSending();\n      }\n    }\n  }\n\n  AjaxAppender.prototype = new Appender();\n  AjaxAppender.prototype.defaults = {\n    waitForResponse: false,\n    timed: false,\n    timerInterval: 1000,\n    batchSize: 1,\n    sendAllOnUnload: false,\n    requestSuccessCallback: null,\n    failCallback: null,\n    postVarName: \"data\",\n    contentType: \"application/x-www-form-urlencoded\"\n  };\n  AjaxAppender.prototype.layout = new HttpPostDataLayout();\n\n  AjaxAppender.prototype.toString = function () {\n    return \"AjaxAppender\";\n  };\n\n  log4javascript.AjaxAppender = AjaxAppender;\n\n  function setCookie(name, value, days, path) {\n    var expires;\n    path = path ? \"; path=\" + path : \"\";\n\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toGMTString();\n    } else {\n      expires = \"\";\n    }\n\n    document.cookie = escape(name) + \"=\" + escape(value) + expires + path;\n  }\n\n  function getCookie(name) {\n    var nameEquals = escape(name) + \"=\";\n    var ca = document.cookie.split(\";\");\n\n    for (var i = 0, len = ca.length; i < len; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1, c.length);\n      }\n\n      if (c.indexOf(nameEquals) === 0) {\n        return unescape(c.substring(nameEquals.length, c.length));\n      }\n    }\n\n    return null;\n  }\n\n  function getBaseUrl() {\n    var scripts = document.getElementsByTagName(\"script\");\n\n    for (var i = 0, len = scripts.length; i < len; ++i) {\n      if (scripts[i].src.indexOf(\"log4javascript\") != -1) {\n        var lastSlash = scripts[i].src.lastIndexOf(\"/\");\n        return lastSlash == -1 ? \"\" : scripts[i].src.substr(0, lastSlash + 1);\n      }\n    }\n\n    return null;\n  }\n\n  function isLoaded(win) {\n    try {\n      return bool(win.loaded);\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  var ConsoleAppender;\n\n  (function () {\n    var getConsoleHtmlLines = function getConsoleHtmlLines() {\n      return ['<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">', '<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">', '<head>', '<title>log4javascript</title>', '<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />', '<!-- Make IE8 behave like IE7, having gone to all the trouble of making IE work -->', '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=7\" />', '<script type=\"text/javascript\">var isIe = false, isIePre7 = false;</script>', '<!--[if IE]><script type=\"text/javascript\">isIe = true</script><![endif]-->', '<!--[if lt IE 7]><script type=\"text/javascript\">isIePre7 = true</script><![endif]-->', '<script type=\"text/javascript\">', '//<![CDATA[', 'var loggingEnabled=true;var logQueuedEventsTimer=null;var logEntries=[];var logEntriesAndSeparators=[];var logItems=[];var renderDelay=100;var unrenderedLogItemsExist=false;var rootGroup,currentGroup=null;var loaded=false;var currentLogItem=null;var logMainContainer;function copyProperties(obj,props){for(var i in props){obj[i]=props[i];}}', 'function LogItem(){}', 'LogItem.prototype={mainContainer:null,wrappedContainer:null,unwrappedContainer:null,group:null,appendToLog:function(){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].appendToLog();}', 'this.group.update();},doRemove:function(doUpdate,removeFromGroup){if(this.rendered){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].remove();}', 'this.unwrappedElementContainer=null;this.wrappedElementContainer=null;this.mainElementContainer=null;}', 'if(this.group&&removeFromGroup){this.group.removeChild(this,doUpdate);}', 'if(this===currentLogItem){currentLogItem=null;}},remove:function(doUpdate,removeFromGroup){this.doRemove(doUpdate,removeFromGroup);},render:function(){},accept:function(visitor){visitor.visit(this);},getUnwrappedDomContainer:function(){return this.group.unwrappedElementContainer.contentDiv;},getWrappedDomContainer:function(){return this.group.wrappedElementContainer.contentDiv;},getMainDomContainer:function(){return this.group.mainElementContainer.contentDiv;}};LogItem.serializedItemKeys={LOG_ENTRY:0,GROUP_START:1,GROUP_END:2};function LogItemContainerElement(){}', 'LogItemContainerElement.prototype={appendToLog:function(){var insertBeforeFirst=(newestAtTop&&this.containerDomNode.hasChildNodes());if(insertBeforeFirst){this.containerDomNode.insertBefore(this.mainDiv,this.containerDomNode.firstChild);}else{this.containerDomNode.appendChild(this.mainDiv);}}};function SeparatorElementContainer(containerDomNode){this.containerDomNode=containerDomNode;this.mainDiv=document.createElement(\"div\");this.mainDiv.className=\"separator\";this.mainDiv.innerHTML=\"&nbsp;\";}', 'SeparatorElementContainer.prototype=new LogItemContainerElement();SeparatorElementContainer.prototype.remove=function(){this.mainDiv.parentNode.removeChild(this.mainDiv);this.mainDiv=null;};function Separator(){this.rendered=false;}', 'Separator.prototype=new LogItem();copyProperties(Separator.prototype,{render:function(){var containerDomNode=this.group.contentDiv;if(isIe){this.unwrappedElementContainer=new SeparatorElementContainer(this.getUnwrappedDomContainer());this.wrappedElementContainer=new SeparatorElementContainer(this.getWrappedDomContainer());this.elementContainers=[this.unwrappedElementContainer,this.wrappedElementContainer];}else{this.mainElementContainer=new SeparatorElementContainer(this.getMainDomContainer());this.elementContainers=[this.mainElementContainer];}', 'this.content=this.formattedMessage;this.rendered=true;}});function GroupElementContainer(group,containerDomNode,isRoot,isWrapped){this.group=group;this.containerDomNode=containerDomNode;this.isRoot=isRoot;this.isWrapped=isWrapped;this.expandable=false;if(this.isRoot){if(isIe){this.contentDiv=logMainContainer.appendChild(document.createElement(\"div\"));this.contentDiv.id=this.isWrapped?\"log_wrapped\":\"log_unwrapped\";}else{this.contentDiv=logMainContainer;}}else{var groupElementContainer=this;this.mainDiv=document.createElement(\"div\");this.mainDiv.className=\"group\";this.headingDiv=this.mainDiv.appendChild(document.createElement(\"div\"));this.headingDiv.className=\"groupheading\";this.expander=this.headingDiv.appendChild(document.createElement(\"span\"));this.expander.className=\"expander unselectable greyedout\";this.expander.unselectable=true;var expanderText=this.group.expanded?\"-\":\"+\";this.expanderTextNode=this.expander.appendChild(document.createTextNode(expanderText));this.headingDiv.appendChild(document.createTextNode(\" \"+this.group.name));this.contentDiv=this.mainDiv.appendChild(document.createElement(\"div\"));var contentCssClass=this.group.expanded?\"expanded\":\"collapsed\";this.contentDiv.className=\"groupcontent \"+contentCssClass;this.expander.onclick=function(){if(groupElementContainer.group.expandable){groupElementContainer.group.toggleExpanded();}};}}', 'GroupElementContainer.prototype=new LogItemContainerElement();copyProperties(GroupElementContainer.prototype,{toggleExpanded:function(){if(!this.isRoot){var oldCssClass,newCssClass,expanderText;if(this.group.expanded){newCssClass=\"expanded\";oldCssClass=\"collapsed\";expanderText=\"-\";}else{newCssClass=\"collapsed\";oldCssClass=\"expanded\";expanderText=\"+\";}', 'replaceClass(this.contentDiv,newCssClass,oldCssClass);this.expanderTextNode.nodeValue=expanderText;}},remove:function(){if(!this.isRoot){this.headingDiv=null;this.expander.onclick=null;this.expander=null;this.expanderTextNode=null;this.contentDiv=null;this.containerDomNode=null;this.mainDiv.parentNode.removeChild(this.mainDiv);this.mainDiv=null;}},reverseChildren:function(){var node=null;var childDomNodes=[];while((node=this.contentDiv.firstChild)){this.contentDiv.removeChild(node);childDomNodes.push(node);}', 'while((node=childDomNodes.pop())){this.contentDiv.appendChild(node);}},update:function(){if(!this.isRoot){if(this.group.expandable){removeClass(this.expander,\"greyedout\");}else{addClass(this.expander,\"greyedout\");}}},clear:function(){if(this.isRoot){this.contentDiv.innerHTML=\"\";}}});function Group(name,isRoot,initiallyExpanded){this.name=name;this.group=null;this.isRoot=isRoot;this.initiallyExpanded=initiallyExpanded;this.elementContainers=[];this.children=[];this.expanded=initiallyExpanded;this.rendered=false;this.expandable=false;}', 'Group.prototype=new LogItem();copyProperties(Group.prototype,{addChild:function(logItem){this.children.push(logItem);logItem.group=this;},render:function(){if(isIe){var unwrappedDomContainer,wrappedDomContainer;if(this.isRoot){unwrappedDomContainer=logMainContainer;wrappedDomContainer=logMainContainer;}else{unwrappedDomContainer=this.getUnwrappedDomContainer();wrappedDomContainer=this.getWrappedDomContainer();}', 'this.unwrappedElementContainer=new GroupElementContainer(this,unwrappedDomContainer,this.isRoot,false);this.wrappedElementContainer=new GroupElementContainer(this,wrappedDomContainer,this.isRoot,true);this.elementContainers=[this.unwrappedElementContainer,this.wrappedElementContainer];}else{var mainDomContainer=this.isRoot?logMainContainer:this.getMainDomContainer();this.mainElementContainer=new GroupElementContainer(this,mainDomContainer,this.isRoot,false);this.elementContainers=[this.mainElementContainer];}', 'this.rendered=true;},toggleExpanded:function(){this.expanded=!this.expanded;for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].toggleExpanded();}},expand:function(){if(!this.expanded){this.toggleExpanded();}},accept:function(visitor){visitor.visitGroup(this);},reverseChildren:function(){if(this.rendered){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].reverseChildren();}}},update:function(){var previouslyExpandable=this.expandable;this.expandable=(this.children.length!==0);if(this.expandable!==previouslyExpandable){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].update();}}},flatten:function(){var visitor=new GroupFlattener();this.accept(visitor);return visitor.logEntriesAndSeparators;},removeChild:function(child,doUpdate){array_remove(this.children,child);child.group=null;if(doUpdate){this.update();}},remove:function(doUpdate,removeFromGroup){for(var i=0,len=this.children.length;i<len;i++){this.children[i].remove(false,false);}', 'this.children=[];this.update();if(this===currentGroup){currentGroup=this.group;}', 'this.doRemove(doUpdate,removeFromGroup);},serialize:function(items){items.push([LogItem.serializedItemKeys.GROUP_START,this.name]);for(var i=0,len=this.children.length;i<len;i++){this.children[i].serialize(items);}', 'if(this!==currentGroup){items.push([LogItem.serializedItemKeys.GROUP_END]);}},clear:function(){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].clear();}}});function LogEntryElementContainer(){}', 'LogEntryElementContainer.prototype=new LogItemContainerElement();copyProperties(LogEntryElementContainer.prototype,{remove:function(){this.doRemove();},doRemove:function(){this.mainDiv.parentNode.removeChild(this.mainDiv);this.mainDiv=null;this.contentElement=null;this.containerDomNode=null;},setContent:function(content,wrappedContent){if(content===this.formattedMessage){this.contentElement.innerHTML=\"\";this.contentElement.appendChild(document.createTextNode(this.formattedMessage));}else{this.contentElement.innerHTML=content;}},setSearchMatch:function(isMatch){var oldCssClass=isMatch?\"searchnonmatch\":\"searchmatch\";var newCssClass=isMatch?\"searchmatch\":\"searchnonmatch\";replaceClass(this.mainDiv,newCssClass,oldCssClass);},clearSearch:function(){removeClass(this.mainDiv,\"searchmatch\");removeClass(this.mainDiv,\"searchnonmatch\");}});function LogEntryWrappedElementContainer(logEntry,containerDomNode){this.logEntry=logEntry;this.containerDomNode=containerDomNode;this.mainDiv=document.createElement(\"div\");this.mainDiv.appendChild(document.createTextNode(this.logEntry.formattedMessage));this.mainDiv.className=\"logentry wrapped \"+this.logEntry.level;this.contentElement=this.mainDiv;}', 'LogEntryWrappedElementContainer.prototype=new LogEntryElementContainer();LogEntryWrappedElementContainer.prototype.setContent=function(content,wrappedContent){if(content===this.formattedMessage){this.contentElement.innerHTML=\"\";this.contentElement.appendChild(document.createTextNode(this.formattedMessage));}else{this.contentElement.innerHTML=wrappedContent;}};function LogEntryUnwrappedElementContainer(logEntry,containerDomNode){this.logEntry=logEntry;this.containerDomNode=containerDomNode;this.mainDiv=document.createElement(\"div\");this.mainDiv.className=\"logentry unwrapped \"+this.logEntry.level;this.pre=this.mainDiv.appendChild(document.createElement(\"pre\"));this.pre.appendChild(document.createTextNode(this.logEntry.formattedMessage));this.pre.className=\"unwrapped\";this.contentElement=this.pre;}', 'LogEntryUnwrappedElementContainer.prototype=new LogEntryElementContainer();LogEntryUnwrappedElementContainer.prototype.remove=function(){this.doRemove();this.pre=null;};function LogEntryMainElementContainer(logEntry,containerDomNode){this.logEntry=logEntry;this.containerDomNode=containerDomNode;this.mainDiv=document.createElement(\"div\");this.mainDiv.className=\"logentry nonielogentry \"+this.logEntry.level;this.contentElement=this.mainDiv.appendChild(document.createElement(\"span\"));this.contentElement.appendChild(document.createTextNode(this.logEntry.formattedMessage));}', 'LogEntryMainElementContainer.prototype=new LogEntryElementContainer();function LogEntry(level,formattedMessage){this.level=level;this.formattedMessage=formattedMessage;this.rendered=false;}', 'LogEntry.prototype=new LogItem();copyProperties(LogEntry.prototype,{render:function(){var logEntry=this;var containerDomNode=this.group.contentDiv;if(isIe){this.formattedMessage=this.formattedMessage.replace(/\\\\r\\\\n/g,\"\\\\r\");this.unwrappedElementContainer=new LogEntryUnwrappedElementContainer(this,this.getUnwrappedDomContainer());this.wrappedElementContainer=new LogEntryWrappedElementContainer(this,this.getWrappedDomContainer());this.elementContainers=[this.unwrappedElementContainer,this.wrappedElementContainer];}else{this.mainElementContainer=new LogEntryMainElementContainer(this,this.getMainDomContainer());this.elementContainers=[this.mainElementContainer];}', 'this.content=this.formattedMessage;this.rendered=true;},setContent:function(content,wrappedContent){if(content!=this.content){if(isIe&&(content!==this.formattedMessage)){content=content.replace(/\\\\r\\\\n/g,\"\\\\r\");}', 'for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].setContent(content,wrappedContent);}', 'this.content=content;}},getSearchMatches:function(){var matches=[];var i,len;if(isIe){var unwrappedEls=getElementsByClass(this.unwrappedElementContainer.mainDiv,\"searchterm\",\"span\");var wrappedEls=getElementsByClass(this.wrappedElementContainer.mainDiv,\"searchterm\",\"span\");for(i=0,len=unwrappedEls.length;i<len;i++){matches[i]=new Match(this.level,null,unwrappedEls[i],wrappedEls[i]);}}else{var els=getElementsByClass(this.mainElementContainer.mainDiv,\"searchterm\",\"span\");for(i=0,len=els.length;i<len;i++){matches[i]=new Match(this.level,els[i]);}}', 'return matches;},setSearchMatch:function(isMatch){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].setSearchMatch(isMatch);}},clearSearch:function(){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].clearSearch();}},accept:function(visitor){visitor.visitLogEntry(this);},serialize:function(items){items.push([LogItem.serializedItemKeys.LOG_ENTRY,this.level,this.formattedMessage]);}});function LogItemVisitor(){}', 'LogItemVisitor.prototype={visit:function(logItem){},visitParent:function(logItem){if(logItem.group){logItem.group.accept(this);}},visitChildren:function(logItem){for(var i=0,len=logItem.children.length;i<len;i++){logItem.children[i].accept(this);}},visitLogEntry:function(logEntry){this.visit(logEntry);},visitSeparator:function(separator){this.visit(separator);},visitGroup:function(group){this.visit(group);}};function GroupFlattener(){this.logEntriesAndSeparators=[];}', 'GroupFlattener.prototype=new LogItemVisitor();GroupFlattener.prototype.visitGroup=function(group){this.visitChildren(group);};GroupFlattener.prototype.visitLogEntry=function(logEntry){this.logEntriesAndSeparators.push(logEntry);};GroupFlattener.prototype.visitSeparator=function(separator){this.logEntriesAndSeparators.push(separator);};window.onload=function(){if(location.search){var queryBits=unescape(location.search).substr(1).split(\"&\"),nameValueBits;for(var i=0,len=queryBits.length;i<len;i++){nameValueBits=queryBits[i].split(\"=\");if(nameValueBits[0]==\"log4javascript_domain\"){document.domain=nameValueBits[1];break;}}}', 'logMainContainer=$(\"log\");if(isIePre7){addClass(logMainContainer,\"oldIe\");}', 'rootGroup=new Group(\"root\",true);rootGroup.render();currentGroup=rootGroup;setCommandInputWidth();setLogContainerHeight();toggleLoggingEnabled();toggleSearchEnabled();toggleSearchFilter();toggleSearchHighlight();applyFilters();checkAllLevels();toggleWrap();toggleNewestAtTop();toggleScrollToLatest();renderQueuedLogItems();loaded=true;$(\"command\").value=\"\";$(\"command\").autocomplete=\"off\";$(\"command\").onkeydown=function(evt){evt=getEvent(evt);if(evt.keyCode==10||evt.keyCode==13){evalCommandLine();stopPropagation(evt);}else if(evt.keyCode==27){this.value=\"\";this.focus();}else if(evt.keyCode==38&&commandHistory.length>0){currentCommandIndex=Math.max(0,currentCommandIndex-1);this.value=commandHistory[currentCommandIndex];moveCaretToEnd(this);}else if(evt.keyCode==40&&commandHistory.length>0){currentCommandIndex=Math.min(commandHistory.length-1,currentCommandIndex+1);this.value=commandHistory[currentCommandIndex];moveCaretToEnd(this);}};$(\"command\").onkeypress=function(evt){evt=getEvent(evt);if(evt.keyCode==38&&commandHistory.length>0&&evt.preventDefault){evt.preventDefault();}};$(\"command\").onkeyup=function(evt){evt=getEvent(evt);if(evt.keyCode==27&&evt.preventDefault){evt.preventDefault();this.focus();}};document.onkeydown=function keyEventHandler(evt){evt=getEvent(evt);switch(evt.keyCode){case 69:if(evt.shiftKey&&(evt.ctrlKey||evt.metaKey)){evalLastCommand();cancelKeyEvent(evt);return false;}', 'break;case 75:if(evt.shiftKey&&(evt.ctrlKey||evt.metaKey)){focusSearch();cancelKeyEvent(evt);return false;}', 'break;case 40:case 76:if(evt.shiftKey&&(evt.ctrlKey||evt.metaKey)){focusCommandLine();cancelKeyEvent(evt);return false;}', 'break;}};setTimeout(setLogContainerHeight,20);setShowCommandLine(showCommandLine);doSearch();};window.onunload=function(){if(mainWindowExists()){appender.unload();}', 'appender=null;};function toggleLoggingEnabled(){setLoggingEnabled($(\"enableLogging\").checked);}', 'function setLoggingEnabled(enable){loggingEnabled=enable;}', 'var appender=null;function setAppender(appenderParam){appender=appenderParam;}', 'function setShowCloseButton(showCloseButton){$(\"closeButton\").style.display=showCloseButton?\"inline\":\"none\";}', 'function setShowHideButton(showHideButton){$(\"hideButton\").style.display=showHideButton?\"inline\":\"none\";}', 'var newestAtTop=false;function LogItemContentReverser(){}', 'LogItemContentReverser.prototype=new LogItemVisitor();LogItemContentReverser.prototype.visitGroup=function(group){group.reverseChildren();this.visitChildren(group);};function setNewestAtTop(isNewestAtTop){var oldNewestAtTop=newestAtTop;var i,iLen,j,jLen;newestAtTop=Boolean(isNewestAtTop);if(oldNewestAtTop!=newestAtTop){var visitor=new LogItemContentReverser();rootGroup.accept(visitor);if(currentSearch){var currentMatch=currentSearch.matches[currentMatchIndex];var matchIndex=0;var matches=[];var actOnLogEntry=function(logEntry){var logEntryMatches=logEntry.getSearchMatches();for(j=0,jLen=logEntryMatches.length;j<jLen;j++){matches[matchIndex]=logEntryMatches[j];if(currentMatch&&logEntryMatches[j].equals(currentMatch)){currentMatchIndex=matchIndex;}', 'matchIndex++;}};if(newestAtTop){for(i=logEntries.length-1;i>=0;i--){actOnLogEntry(logEntries[i]);}}else{for(i=0,iLen=logEntries.length;i<iLen;i++){actOnLogEntry(logEntries[i]);}}', 'currentSearch.matches=matches;if(currentMatch){currentMatch.setCurrent();}}else if(scrollToLatest){doScrollToLatest();}}', '$(\"newestAtTop\").checked=isNewestAtTop;}', 'function toggleNewestAtTop(){var isNewestAtTop=$(\"newestAtTop\").checked;setNewestAtTop(isNewestAtTop);}', 'var scrollToLatest=true;function setScrollToLatest(isScrollToLatest){scrollToLatest=isScrollToLatest;if(scrollToLatest){doScrollToLatest();}', '$(\"scrollToLatest\").checked=isScrollToLatest;}', 'function toggleScrollToLatest(){var isScrollToLatest=$(\"scrollToLatest\").checked;setScrollToLatest(isScrollToLatest);}', 'function doScrollToLatest(){var l=logMainContainer;if(typeof l.scrollTop!=\"undefined\"){if(newestAtTop){l.scrollTop=0;}else{var latestLogEntry=l.lastChild;if(latestLogEntry){l.scrollTop=l.scrollHeight;}}}}', 'var closeIfOpenerCloses=true;function setCloseIfOpenerCloses(isCloseIfOpenerCloses){closeIfOpenerCloses=isCloseIfOpenerCloses;}', 'var maxMessages=null;function setMaxMessages(max){maxMessages=max;pruneLogEntries();}', 'var showCommandLine=false;function setShowCommandLine(isShowCommandLine){showCommandLine=isShowCommandLine;if(loaded){$(\"commandLine\").style.display=showCommandLine?\"block\":\"none\";setCommandInputWidth();setLogContainerHeight();}}', 'function focusCommandLine(){if(loaded){$(\"command\").focus();}}', 'function focusSearch(){if(loaded){$(\"searchBox\").focus();}}', 'function getLogItems(){var items=[];for(var i=0,len=logItems.length;i<len;i++){logItems[i].serialize(items);}', 'return items;}', 'function setLogItems(items){var loggingReallyEnabled=loggingEnabled;loggingEnabled=true;for(var i=0,len=items.length;i<len;i++){switch(items[i][0]){case LogItem.serializedItemKeys.LOG_ENTRY:log(items[i][1],items[i][2]);break;case LogItem.serializedItemKeys.GROUP_START:group(items[i][1]);break;case LogItem.serializedItemKeys.GROUP_END:groupEnd();break;}}', 'loggingEnabled=loggingReallyEnabled;}', 'function log(logLevel,formattedMessage){if(loggingEnabled){var logEntry=new LogEntry(logLevel,formattedMessage);logEntries.push(logEntry);logEntriesAndSeparators.push(logEntry);logItems.push(logEntry);currentGroup.addChild(logEntry);if(loaded){if(logQueuedEventsTimer!==null){clearTimeout(logQueuedEventsTimer);}', 'logQueuedEventsTimer=setTimeout(renderQueuedLogItems,renderDelay);unrenderedLogItemsExist=true;}}}', 'function renderQueuedLogItems(){logQueuedEventsTimer=null;var pruned=pruneLogEntries();var initiallyHasMatches=currentSearch?currentSearch.hasMatches():false;for(var i=0,len=logItems.length;i<len;i++){if(!logItems[i].rendered){logItems[i].render();logItems[i].appendToLog();if(currentSearch&&(logItems[i]instanceof LogEntry)){currentSearch.applyTo(logItems[i]);}}}', 'if(currentSearch){if(pruned){if(currentSearch.hasVisibleMatches()){if(currentMatchIndex===null){setCurrentMatchIndex(0);}', 'displayMatches();}else{displayNoMatches();}}else if(!initiallyHasMatches&&currentSearch.hasVisibleMatches()){setCurrentMatchIndex(0);displayMatches();}}', 'if(scrollToLatest){doScrollToLatest();}', 'unrenderedLogItemsExist=false;}', 'function pruneLogEntries(){if((maxMessages!==null)&&(logEntriesAndSeparators.length>maxMessages)){var numberToDelete=logEntriesAndSeparators.length-maxMessages;var prunedLogEntries=logEntriesAndSeparators.slice(0,numberToDelete);if(currentSearch){currentSearch.removeMatches(prunedLogEntries);}', 'var group;for(var i=0;i<numberToDelete;i++){group=logEntriesAndSeparators[i].group;array_remove(logItems,logEntriesAndSeparators[i]);array_remove(logEntries,logEntriesAndSeparators[i]);logEntriesAndSeparators[i].remove(true,true);if(group.children.length===0&&group!==currentGroup&&group!==rootGroup){array_remove(logItems,group);group.remove(true,true);}}', 'logEntriesAndSeparators=array_removeFromStart(logEntriesAndSeparators,numberToDelete);return true;}', 'return false;}', 'function group(name,startExpanded){if(loggingEnabled){initiallyExpanded=(typeof startExpanded===\"undefined\")?true:Boolean(startExpanded);var newGroup=new Group(name,false,initiallyExpanded);currentGroup.addChild(newGroup);currentGroup=newGroup;logItems.push(newGroup);if(loaded){if(logQueuedEventsTimer!==null){clearTimeout(logQueuedEventsTimer);}', 'logQueuedEventsTimer=setTimeout(renderQueuedLogItems,renderDelay);unrenderedLogItemsExist=true;}}}', 'function groupEnd(){currentGroup=(currentGroup===rootGroup)?rootGroup:currentGroup.group;}', 'function mainPageReloaded(){currentGroup=rootGroup;var separator=new Separator();logEntriesAndSeparators.push(separator);logItems.push(separator);currentGroup.addChild(separator);}', 'function closeWindow(){if(appender&&mainWindowExists()){appender.close(true);}else{window.close();}}', 'function hide(){if(appender&&mainWindowExists()){appender.hide();}}', 'var mainWindow=window;var windowId=\"log4javascriptConsoleWindow_\"+new Date().getTime()+\"_\"+(\"\"+Math.random()).substr(2);function setMainWindow(win){mainWindow=win;mainWindow[windowId]=window;if(opener&&closeIfOpenerCloses){pollOpener();}}', 'function pollOpener(){if(closeIfOpenerCloses){if(mainWindowExists()){setTimeout(pollOpener,500);}else{closeWindow();}}}', 'function mainWindowExists(){try{return(mainWindow&&!mainWindow.closed&&mainWindow[windowId]==window);}catch(ex){}', 'return false;}', 'var logLevels=[\"TRACE\",\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\",\"FATAL\"];function getCheckBox(logLevel){return $(\"switch_\"+logLevel);}', 'function getIeWrappedLogContainer(){return $(\"log_wrapped\");}', 'function getIeUnwrappedLogContainer(){return $(\"log_unwrapped\");}', 'function applyFilters(){for(var i=0;i<logLevels.length;i++){if(getCheckBox(logLevels[i]).checked){addClass(logMainContainer,logLevels[i]);}else{removeClass(logMainContainer,logLevels[i]);}}', 'updateSearchFromFilters();}', 'function toggleAllLevels(){var turnOn=$(\"switch_ALL\").checked;for(var i=0;i<logLevels.length;i++){getCheckBox(logLevels[i]).checked=turnOn;if(turnOn){addClass(logMainContainer,logLevels[i]);}else{removeClass(logMainContainer,logLevels[i]);}}}', 'function checkAllLevels(){for(var i=0;i<logLevels.length;i++){if(!getCheckBox(logLevels[i]).checked){getCheckBox(\"ALL\").checked=false;return;}}', 'getCheckBox(\"ALL\").checked=true;}', 'function clearLog(){rootGroup.clear();currentGroup=rootGroup;logEntries=[];logItems=[];logEntriesAndSeparators=[];doSearch();}', 'function toggleWrap(){var enable=$(\"wrap\").checked;if(enable){addClass(logMainContainer,\"wrap\");}else{removeClass(logMainContainer,\"wrap\");}', 'refreshCurrentMatch();}', 'var searchTimer=null;function scheduleSearch(){try{clearTimeout(searchTimer);}catch(ex){}', 'searchTimer=setTimeout(doSearch,500);}', 'function Search(searchTerm,isRegex,searchRegex,isCaseSensitive){this.searchTerm=searchTerm;this.isRegex=isRegex;this.searchRegex=searchRegex;this.isCaseSensitive=isCaseSensitive;this.matches=[];}', 'Search.prototype={hasMatches:function(){return this.matches.length>0;},hasVisibleMatches:function(){if(this.hasMatches()){for(var i=0;i<this.matches.length;i++){if(this.matches[i].isVisible()){return true;}}}', 'return false;},match:function(logEntry){var entryText=String(logEntry.formattedMessage);var matchesSearch=false;if(this.isRegex){matchesSearch=this.searchRegex.test(entryText);}else if(this.isCaseSensitive){matchesSearch=(entryText.indexOf(this.searchTerm)>-1);}else{matchesSearch=(entryText.toLowerCase().indexOf(this.searchTerm.toLowerCase())>-1);}', 'return matchesSearch;},getNextVisibleMatchIndex:function(){for(var i=currentMatchIndex+1;i<this.matches.length;i++){if(this.matches[i].isVisible()){return i;}}', 'for(i=0;i<=currentMatchIndex;i++){if(this.matches[i].isVisible()){return i;}}', 'return-1;},getPreviousVisibleMatchIndex:function(){for(var i=currentMatchIndex-1;i>=0;i--){if(this.matches[i].isVisible()){return i;}}', 'for(var i=this.matches.length-1;i>=currentMatchIndex;i--){if(this.matches[i].isVisible()){return i;}}', 'return-1;},applyTo:function(logEntry){var doesMatch=this.match(logEntry);if(doesMatch){logEntry.group.expand();logEntry.setSearchMatch(true);var logEntryContent;var wrappedLogEntryContent;var searchTermReplacementStartTag=\"<span class=\\\\\\\"searchterm\\\\\\\">\";var searchTermReplacementEndTag=\"<\"+\"/span>\";var preTagName=isIe?\"pre\":\"span\";var preStartTag=\"<\"+preTagName+\" class=\\\\\\\"pre\\\\\\\">\";var preEndTag=\"<\"+\"/\"+preTagName+\">\";var startIndex=0;var searchIndex,matchedText,textBeforeMatch;if(this.isRegex){var flags=this.isCaseSensitive?\"g\":\"gi\";var capturingRegex=new RegExp(\"(\"+this.searchRegex.source+\")\",flags);var rnd=(\"\"+Math.random()).substr(2);var startToken=\"%%s\"+rnd+\"%%\";var endToken=\"%%e\"+rnd+\"%%\";logEntryContent=logEntry.formattedMessage.replace(capturingRegex,startToken+\"$1\"+endToken);logEntryContent=escapeHtml(logEntryContent);var result;var searchString=logEntryContent;logEntryContent=\"\";wrappedLogEntryContent=\"\";while((searchIndex=searchString.indexOf(startToken,startIndex))>-1){var endTokenIndex=searchString.indexOf(endToken,searchIndex);matchedText=searchString.substring(searchIndex+startToken.length,endTokenIndex);textBeforeMatch=searchString.substring(startIndex,searchIndex);logEntryContent+=preStartTag+textBeforeMatch+preEndTag;logEntryContent+=searchTermReplacementStartTag+preStartTag+matchedText+', 'preEndTag+searchTermReplacementEndTag;if(isIe){wrappedLogEntryContent+=textBeforeMatch+searchTermReplacementStartTag+', 'matchedText+searchTermReplacementEndTag;}', 'startIndex=endTokenIndex+endToken.length;}', 'logEntryContent+=preStartTag+searchString.substr(startIndex)+preEndTag;if(isIe){wrappedLogEntryContent+=searchString.substr(startIndex);}}else{logEntryContent=\"\";wrappedLogEntryContent=\"\";var searchTermReplacementLength=searchTermReplacementStartTag.length+', 'this.searchTerm.length+searchTermReplacementEndTag.length;var searchTermLength=this.searchTerm.length;var searchTermLowerCase=this.searchTerm.toLowerCase();var logTextLowerCase=logEntry.formattedMessage.toLowerCase();while((searchIndex=logTextLowerCase.indexOf(searchTermLowerCase,startIndex))>-1){matchedText=escapeHtml(logEntry.formattedMessage.substr(searchIndex,this.searchTerm.length));textBeforeMatch=escapeHtml(logEntry.formattedMessage.substring(startIndex,searchIndex));var searchTermReplacement=searchTermReplacementStartTag+', 'preStartTag+matchedText+preEndTag+searchTermReplacementEndTag;logEntryContent+=preStartTag+textBeforeMatch+preEndTag+searchTermReplacement;if(isIe){wrappedLogEntryContent+=textBeforeMatch+searchTermReplacementStartTag+', 'matchedText+searchTermReplacementEndTag;}', 'startIndex=searchIndex+searchTermLength;}', 'var textAfterLastMatch=escapeHtml(logEntry.formattedMessage.substr(startIndex));logEntryContent+=preStartTag+textAfterLastMatch+preEndTag;if(isIe){wrappedLogEntryContent+=textAfterLastMatch;}}', 'logEntry.setContent(logEntryContent,wrappedLogEntryContent);var logEntryMatches=logEntry.getSearchMatches();this.matches=this.matches.concat(logEntryMatches);}else{logEntry.setSearchMatch(false);logEntry.setContent(logEntry.formattedMessage,logEntry.formattedMessage);}', 'return doesMatch;},removeMatches:function(logEntries){var matchesToRemoveCount=0;var currentMatchRemoved=false;var matchesToRemove=[];var i,iLen,j,jLen;for(i=0,iLen=this.matches.length;i<iLen;i++){for(j=0,jLen=logEntries.length;j<jLen;j++){if(this.matches[i].belongsTo(logEntries[j])){matchesToRemove.push(this.matches[i]);if(i===currentMatchIndex){currentMatchRemoved=true;}}}}', 'var newMatch=currentMatchRemoved?null:this.matches[currentMatchIndex];if(currentMatchRemoved){for(i=currentMatchIndex,iLen=this.matches.length;i<iLen;i++){if(this.matches[i].isVisible()&&!array_contains(matchesToRemove,this.matches[i])){newMatch=this.matches[i];break;}}}', 'for(i=0,iLen=matchesToRemove.length;i<iLen;i++){array_remove(this.matches,matchesToRemove[i]);matchesToRemove[i].remove();}', 'if(this.hasVisibleMatches()){if(newMatch===null){setCurrentMatchIndex(0);}else{var newMatchIndex=0;for(i=0,iLen=this.matches.length;i<iLen;i++){if(newMatch===this.matches[i]){newMatchIndex=i;break;}}', 'setCurrentMatchIndex(newMatchIndex);}}else{currentMatchIndex=null;displayNoMatches();}}};function getPageOffsetTop(el,container){var currentEl=el;var y=0;while(currentEl&&currentEl!=container){y+=currentEl.offsetTop;currentEl=currentEl.offsetParent;}', 'return y;}', 'function scrollIntoView(el){var logContainer=logMainContainer;if(!$(\"wrap\").checked){var logContainerLeft=logContainer.scrollLeft;var logContainerRight=logContainerLeft+logContainer.offsetWidth;var elLeft=el.offsetLeft;var elRight=elLeft+el.offsetWidth;if(elLeft<logContainerLeft||elRight>logContainerRight){logContainer.scrollLeft=elLeft-(logContainer.offsetWidth-el.offsetWidth)/2;}}', 'var logContainerTop=logContainer.scrollTop;var logContainerBottom=logContainerTop+logContainer.offsetHeight;var elTop=getPageOffsetTop(el)-getToolBarsHeight();var elBottom=elTop+el.offsetHeight;if(elTop<logContainerTop||elBottom>logContainerBottom){logContainer.scrollTop=elTop-(logContainer.offsetHeight-el.offsetHeight)/2;}}', 'function Match(logEntryLevel,spanInMainDiv,spanInUnwrappedPre,spanInWrappedDiv){this.logEntryLevel=logEntryLevel;this.spanInMainDiv=spanInMainDiv;if(isIe){this.spanInUnwrappedPre=spanInUnwrappedPre;this.spanInWrappedDiv=spanInWrappedDiv;}', 'this.mainSpan=isIe?spanInUnwrappedPre:spanInMainDiv;}', 'Match.prototype={equals:function(match){return this.mainSpan===match.mainSpan;},setCurrent:function(){if(isIe){addClass(this.spanInUnwrappedPre,\"currentmatch\");addClass(this.spanInWrappedDiv,\"currentmatch\");var elementToScroll=$(\"wrap\").checked?this.spanInWrappedDiv:this.spanInUnwrappedPre;scrollIntoView(elementToScroll);}else{addClass(this.spanInMainDiv,\"currentmatch\");scrollIntoView(this.spanInMainDiv);}},belongsTo:function(logEntry){if(isIe){return isDescendant(this.spanInUnwrappedPre,logEntry.unwrappedPre);}else{return isDescendant(this.spanInMainDiv,logEntry.mainDiv);}},setNotCurrent:function(){if(isIe){removeClass(this.spanInUnwrappedPre,\"currentmatch\");removeClass(this.spanInWrappedDiv,\"currentmatch\");}else{removeClass(this.spanInMainDiv,\"currentmatch\");}},isOrphan:function(){return isOrphan(this.mainSpan);},isVisible:function(){return getCheckBox(this.logEntryLevel).checked;},remove:function(){if(isIe){this.spanInUnwrappedPre=null;this.spanInWrappedDiv=null;}else{this.spanInMainDiv=null;}}};var currentSearch=null;var currentMatchIndex=null;function doSearch(){var searchBox=$(\"searchBox\");var searchTerm=searchBox.value;var isRegex=$(\"searchRegex\").checked;var isCaseSensitive=$(\"searchCaseSensitive\").checked;var i;if(searchTerm===\"\"){$(\"searchReset\").disabled=true;$(\"searchNav\").style.display=\"none\";removeClass(document.body,\"searching\");removeClass(searchBox,\"hasmatches\");removeClass(searchBox,\"nomatches\");for(i=0;i<logEntries.length;i++){logEntries[i].clearSearch();logEntries[i].setContent(logEntries[i].formattedMessage,logEntries[i].formattedMessage);}', 'currentSearch=null;setLogContainerHeight();}else{$(\"searchReset\").disabled=false;$(\"searchNav\").style.display=\"block\";var searchRegex;var regexValid;if(isRegex){try{searchRegex=isCaseSensitive?new RegExp(searchTerm,\"g\"):new RegExp(searchTerm,\"gi\");regexValid=true;replaceClass(searchBox,\"validregex\",\"invalidregex\");searchBox.title=\"Valid regex\";}catch(ex){regexValid=false;replaceClass(searchBox,\"invalidregex\",\"validregex\");searchBox.title=\"Invalid regex: \"+(ex.message?ex.message:(ex.description?ex.description:\"unknown error\"));return;}}else{searchBox.title=\"\";removeClass(searchBox,\"validregex\");removeClass(searchBox,\"invalidregex\");}', 'addClass(document.body,\"searching\");currentSearch=new Search(searchTerm,isRegex,searchRegex,isCaseSensitive);for(i=0;i<logEntries.length;i++){currentSearch.applyTo(logEntries[i]);}', 'setLogContainerHeight();if(currentSearch.hasVisibleMatches()){setCurrentMatchIndex(0);displayMatches();}else{displayNoMatches();}}}', 'function updateSearchFromFilters(){if(currentSearch){if(currentSearch.hasMatches()){if(currentMatchIndex===null){currentMatchIndex=0;}', 'var currentMatch=currentSearch.matches[currentMatchIndex];if(currentMatch.isVisible()){displayMatches();setCurrentMatchIndex(currentMatchIndex);}else{currentMatch.setNotCurrent();var nextVisibleMatchIndex=currentSearch.getNextVisibleMatchIndex();if(nextVisibleMatchIndex>-1){setCurrentMatchIndex(nextVisibleMatchIndex);displayMatches();}else{displayNoMatches();}}}else{displayNoMatches();}}}', 'function refreshCurrentMatch(){if(currentSearch&&currentSearch.hasVisibleMatches()){setCurrentMatchIndex(currentMatchIndex);}}', 'function displayMatches(){replaceClass($(\"searchBox\"),\"hasmatches\",\"nomatches\");$(\"searchBox\").title=\"\"+currentSearch.matches.length+\" matches found\";$(\"searchNav\").style.display=\"block\";setLogContainerHeight();}', 'function displayNoMatches(){replaceClass($(\"searchBox\"),\"nomatches\",\"hasmatches\");$(\"searchBox\").title=\"No matches found\";$(\"searchNav\").style.display=\"none\";setLogContainerHeight();}', 'function toggleSearchEnabled(enable){enable=(typeof enable==\"undefined\")?!$(\"searchDisable\").checked:enable;$(\"searchBox\").disabled=!enable;$(\"searchReset\").disabled=!enable;$(\"searchRegex\").disabled=!enable;$(\"searchNext\").disabled=!enable;$(\"searchPrevious\").disabled=!enable;$(\"searchCaseSensitive\").disabled=!enable;$(\"searchNav\").style.display=(enable&&($(\"searchBox\").value!==\"\")&&currentSearch&&currentSearch.hasVisibleMatches())?\"block\":\"none\";if(enable){removeClass($(\"search\"),\"greyedout\");addClass(document.body,\"searching\");if($(\"searchHighlight\").checked){addClass(logMainContainer,\"searchhighlight\");}else{removeClass(logMainContainer,\"searchhighlight\");}', 'if($(\"searchFilter\").checked){addClass(logMainContainer,\"searchfilter\");}else{removeClass(logMainContainer,\"searchfilter\");}', '$(\"searchDisable\").checked=!enable;}else{addClass($(\"search\"),\"greyedout\");removeClass(document.body,\"searching\");removeClass(logMainContainer,\"searchhighlight\");removeClass(logMainContainer,\"searchfilter\");}', 'setLogContainerHeight();}', 'function toggleSearchFilter(){var enable=$(\"searchFilter\").checked;if(enable){addClass(logMainContainer,\"searchfilter\");}else{removeClass(logMainContainer,\"searchfilter\");}', 'refreshCurrentMatch();}', 'function toggleSearchHighlight(){var enable=$(\"searchHighlight\").checked;if(enable){addClass(logMainContainer,\"searchhighlight\");}else{removeClass(logMainContainer,\"searchhighlight\");}}', 'function clearSearch(){$(\"searchBox\").value=\"\";doSearch();}', 'function searchNext(){if(currentSearch!==null&&currentMatchIndex!==null){currentSearch.matches[currentMatchIndex].setNotCurrent();var nextMatchIndex=currentSearch.getNextVisibleMatchIndex();if(nextMatchIndex>currentMatchIndex||confirm(\"Reached the end of the page. Start from the top?\")){setCurrentMatchIndex(nextMatchIndex);}}}', 'function searchPrevious(){if(currentSearch!==null&&currentMatchIndex!==null){currentSearch.matches[currentMatchIndex].setNotCurrent();var previousMatchIndex=currentSearch.getPreviousVisibleMatchIndex();if(previousMatchIndex<currentMatchIndex||confirm(\"Reached the start of the page. Continue from the bottom?\")){setCurrentMatchIndex(previousMatchIndex);}}}', 'function setCurrentMatchIndex(index){currentMatchIndex=index;currentSearch.matches[currentMatchIndex].setCurrent();}', 'function addClass(el,cssClass){if(!hasClass(el,cssClass)){if(el.className){el.className+=\" \"+cssClass;}else{el.className=cssClass;}}}', 'function hasClass(el,cssClass){if(el.className){var classNames=el.className.split(\" \");return array_contains(classNames,cssClass);}', 'return false;}', 'function removeClass(el,cssClass){if(hasClass(el,cssClass)){var existingClasses=el.className.split(\" \");var newClasses=[];for(var i=0,len=existingClasses.length;i<len;i++){if(existingClasses[i]!=cssClass){newClasses[newClasses.length]=existingClasses[i];}}', 'el.className=newClasses.join(\" \");}}', 'function replaceClass(el,newCssClass,oldCssClass){removeClass(el,oldCssClass);addClass(el,newCssClass);}', 'function getElementsByClass(el,cssClass,tagName){var elements=el.getElementsByTagName(tagName);var matches=[];for(var i=0,len=elements.length;i<len;i++){if(hasClass(elements[i],cssClass)){matches.push(elements[i]);}}', 'return matches;}', 'function $(id){return document.getElementById(id);}', 'function isDescendant(node,ancestorNode){while(node!=null){if(node===ancestorNode){return true;}', 'node=node.parentNode;}', 'return false;}', 'function isOrphan(node){var currentNode=node;while(currentNode){if(currentNode==document.body){return false;}', 'currentNode=currentNode.parentNode;}', 'return true;}', 'function escapeHtml(str){return str.replace(/&/g,\"&amp;\").replace(/[<]/g,\"&lt;\").replace(/>/g,\"&gt;\");}', 'function getWindowWidth(){if(window.innerWidth){return window.innerWidth;}else if(document.documentElement&&document.documentElement.clientWidth){return document.documentElement.clientWidth;}else if(document.body){return document.body.clientWidth;}', 'return 0;}', 'function getWindowHeight(){if(window.innerHeight){return window.innerHeight;}else if(document.documentElement&&document.documentElement.clientHeight){return document.documentElement.clientHeight;}else if(document.body){return document.body.clientHeight;}', 'return 0;}', 'function getToolBarsHeight(){return $(\"switches\").offsetHeight;}', 'function getChromeHeight(){var height=getToolBarsHeight();if(showCommandLine){height+=$(\"commandLine\").offsetHeight;}', 'return height;}', 'function setLogContainerHeight(){if(logMainContainer){var windowHeight=getWindowHeight();$(\"body\").style.height=getWindowHeight()+\"px\";logMainContainer.style.height=\"\"+', 'Math.max(0,windowHeight-getChromeHeight())+\"px\";}}', 'function setCommandInputWidth(){if(showCommandLine){$(\"command\").style.width=\"\"+Math.max(0,$(\"commandLineContainer\").offsetWidth-', '($(\"evaluateButton\").offsetWidth+13))+\"px\";}}', 'window.onresize=function(){setCommandInputWidth();setLogContainerHeight();};if(!Array.prototype.push){Array.prototype.push=function(){for(var i=0,len=arguments.length;i<len;i++){this[this.length]=arguments[i];}', 'return this.length;};}', 'if(!Array.prototype.pop){Array.prototype.pop=function(){if(this.length>0){var val=this[this.length-1];this.length=this.length-1;return val;}};}', 'if(!Array.prototype.shift){Array.prototype.shift=function(){if(this.length>0){var firstItem=this[0];for(var i=0,len=this.length-1;i<len;i++){this[i]=this[i+1];}', 'this.length=this.length-1;return firstItem;}};}', 'if(!Array.prototype.splice){Array.prototype.splice=function(startIndex,deleteCount){var itemsAfterDeleted=this.slice(startIndex+deleteCount);var itemsDeleted=this.slice(startIndex,startIndex+deleteCount);this.length=startIndex;var argumentsArray=[];for(var i=0,len=arguments.length;i<len;i++){argumentsArray[i]=arguments[i];}', 'var itemsToAppend=(argumentsArray.length>2)?itemsAfterDeleted=argumentsArray.slice(2).concat(itemsAfterDeleted):itemsAfterDeleted;for(i=0,len=itemsToAppend.length;i<len;i++){this.push(itemsToAppend[i]);}', 'return itemsDeleted;};}', 'function array_remove(arr,val){var index=-1;for(var i=0,len=arr.length;i<len;i++){if(arr[i]===val){index=i;break;}}', 'if(index>=0){arr.splice(index,1);return index;}else{return false;}}', 'function array_removeFromStart(array,numberToRemove){if(Array.prototype.splice){array.splice(0,numberToRemove);}else{for(var i=numberToRemove,len=array.length;i<len;i++){array[i-numberToRemove]=array[i];}', 'array.length=array.length-numberToRemove;}', 'return array;}', 'function array_contains(arr,val){for(var i=0,len=arr.length;i<len;i++){if(arr[i]==val){return true;}}', 'return false;}', 'function getErrorMessage(ex){if(ex.message){return ex.message;}else if(ex.description){return ex.description;}', 'return\"\"+ex;}', 'function moveCaretToEnd(input){if(input.setSelectionRange){input.focus();var length=input.value.length;input.setSelectionRange(length,length);}else if(input.createTextRange){var range=input.createTextRange();range.collapse(false);range.select();}', 'input.focus();}', 'function stopPropagation(evt){if(evt.stopPropagation){evt.stopPropagation();}else if(typeof evt.cancelBubble!=\"undefined\"){evt.cancelBubble=true;}}', 'function getEvent(evt){return evt?evt:event;}', 'function getTarget(evt){return evt.target?evt.target:evt.srcElement;}', 'function getRelatedTarget(evt){if(evt.relatedTarget){return evt.relatedTarget;}else if(evt.srcElement){switch(evt.type){case\"mouseover\":return evt.fromElement;case\"mouseout\":return evt.toElement;default:return evt.srcElement;}}}', 'function cancelKeyEvent(evt){evt.returnValue=false;stopPropagation(evt);}', 'function evalCommandLine(){var expr=$(\"command\").value;evalCommand(expr);$(\"command\").value=\"\";}', 'function evalLastCommand(){if(lastCommand!=null){evalCommand(lastCommand);}}', 'var lastCommand=null;var commandHistory=[];var currentCommandIndex=0;function evalCommand(expr){if(appender){appender.evalCommandAndAppend(expr);}else{var prefix=\">>> \"+expr+\"\\\\r\\\\n\";try{log(\"INFO\",prefix+eval(expr));}catch(ex){log(\"ERROR\",prefix+\"Error: \"+getErrorMessage(ex));}}', 'if(expr!=commandHistory[commandHistory.length-1]){commandHistory.push(expr);if(appender){appender.storeCommandHistory(commandHistory);}}', 'currentCommandIndex=(expr==commandHistory[currentCommandIndex])?currentCommandIndex+1:commandHistory.length;lastCommand=expr;}', '//]]>', '</script>', '<style type=\"text/css\">', 'body{background-color:white;color:black;padding:0;margin:0;font-family:tahoma,verdana,arial,helvetica,sans-serif;overflow:hidden}div#switchesContainer input{margin-bottom:0}div.toolbar{border-top:solid #ffffff 1px;border-bottom:solid #aca899 1px;background-color:#f1efe7;padding:3px 5px;font-size:68.75%}div.toolbar,div#search input{font-family:tahoma,verdana,arial,helvetica,sans-serif}div.toolbar input.button{padding:0 5px;font-size:100%}div.toolbar input.hidden{display:none}div#switches input#clearButton{margin-left:20px}div#levels label{font-weight:bold}div#levels label,div#options label{margin-right:5px}div#levels label#wrapLabel{font-weight:normal}div#search label{margin-right:10px}div#search label.searchboxlabel{margin-right:0}div#search input{font-size:100%}div#search input.validregex{color:green}div#search input.invalidregex{color:red}div#search input.nomatches{color:white;background-color:#ff6666}div#search input.nomatches{color:white;background-color:#ff6666}div#searchNav{display:none}div#commandLine{display:none}div#commandLine input#command{font-size:100%;font-family:Courier New,Courier}div#commandLine input#evaluateButton{}*.greyedout{color:gray !important;border-color:gray !important}*.greyedout *.alwaysenabled{color:black}*.unselectable{-khtml-user-select:none;-moz-user-select:none;user-select:none}div#log{font-family:Courier New,Courier;font-size:75%;width:100%;overflow:auto;clear:both;position:relative}div.group{border-color:#cccccc;border-style:solid;border-width:1px 0 1px 1px;overflow:visible}div.oldIe div.group,div.oldIe div.group *,div.oldIe *.logentry{height:1%}div.group div.groupheading span.expander{border:solid black 1px;font-family:Courier New,Courier;font-size:0.833em;background-color:#eeeeee;position:relative;top:-1px;color:black;padding:0 2px;cursor:pointer;cursor:hand;height:1%}div.group div.groupcontent{margin-left:10px;padding-bottom:2px;overflow:visible}div.group div.expanded{display:block}div.group div.collapsed{display:none}*.logentry{overflow:visible;display:none;white-space:pre}span.pre{white-space:pre}pre.unwrapped{display:inline !important}pre.unwrapped pre.pre,div.wrapped pre.pre{display:inline}div.wrapped pre.pre{white-space:normal}div.wrapped{display:none}body.searching *.logentry span.currentmatch{color:white !important;background-color:green !important}body.searching div.searchhighlight *.logentry span.searchterm{color:black;background-color:yellow}div.wrap *.logentry{white-space:normal !important;border-width:0 0 1px 0;border-color:#dddddd;border-style:dotted}div.wrap #log_wrapped,#log_unwrapped{display:block}div.wrap #log_unwrapped,#log_wrapped{display:none}div.wrap *.logentry span.pre{overflow:visible;white-space:normal}div.wrap *.logentry pre.unwrapped{display:none}div.wrap *.logentry span.wrapped{display:inline}div.searchfilter *.searchnonmatch{display:none !important}div#log *.TRACE,label#label_TRACE{color:#666666}div#log *.DEBUG,label#label_DEBUG{color:green}div#log *.INFO,label#label_INFO{color:#000099}div#log *.WARN,label#label_WARN{color:#999900}div#log *.ERROR,label#label_ERROR{color:red}div#log *.FATAL,label#label_FATAL{color:#660066}div.TRACE#log *.TRACE,div.DEBUG#log *.DEBUG,div.INFO#log *.INFO,div.WARN#log *.WARN,div.ERROR#log *.ERROR,div.FATAL#log *.FATAL{display:block}div#log div.separator{background-color:#cccccc;margin:5px 0;line-height:1px}', '</style>', '</head>', '<body id=\"body\">', '<div id=\"switchesContainer\">', '<div id=\"switches\">', '<div id=\"levels\" class=\"toolbar\">', 'Filters:', '<input type=\"checkbox\" id=\"switch_TRACE\" onclick=\"applyFilters(); checkAllLevels()\" checked=\"checked\" title=\"Show/hide trace messages\" /><label for=\"switch_TRACE\" id=\"label_TRACE\">trace</label>', '<input type=\"checkbox\" id=\"switch_DEBUG\" onclick=\"applyFilters(); checkAllLevels()\" checked=\"checked\" title=\"Show/hide debug messages\" /><label for=\"switch_DEBUG\" id=\"label_DEBUG\">debug</label>', '<input type=\"checkbox\" id=\"switch_INFO\" onclick=\"applyFilters(); checkAllLevels()\" checked=\"checked\" title=\"Show/hide info messages\" /><label for=\"switch_INFO\" id=\"label_INFO\">info</label>', '<input type=\"checkbox\" id=\"switch_WARN\" onclick=\"applyFilters(); checkAllLevels()\" checked=\"checked\" title=\"Show/hide warn messages\" /><label for=\"switch_WARN\" id=\"label_WARN\">warn</label>', '<input type=\"checkbox\" id=\"switch_ERROR\" onclick=\"applyFilters(); checkAllLevels()\" checked=\"checked\" title=\"Show/hide error messages\" /><label for=\"switch_ERROR\" id=\"label_ERROR\">error</label>', '<input type=\"checkbox\" id=\"switch_FATAL\" onclick=\"applyFilters(); checkAllLevels()\" checked=\"checked\" title=\"Show/hide fatal messages\" /><label for=\"switch_FATAL\" id=\"label_FATAL\">fatal</label>', '<input type=\"checkbox\" id=\"switch_ALL\" onclick=\"toggleAllLevels(); applyFilters()\" checked=\"checked\" title=\"Show/hide all messages\" /><label for=\"switch_ALL\" id=\"label_ALL\">all</label>', '</div>', '<div id=\"search\" class=\"toolbar\">', '<label for=\"searchBox\" class=\"searchboxlabel\">Search:</label> <input type=\"text\" id=\"searchBox\" onclick=\"toggleSearchEnabled(true)\" onkeyup=\"scheduleSearch()\" size=\"20\" />', '<input type=\"button\" id=\"searchReset\" disabled=\"disabled\" value=\"Reset\" onclick=\"clearSearch()\" class=\"button\" title=\"Reset the search\" />', '<input type=\"checkbox\" id=\"searchRegex\" onclick=\"doSearch()\" title=\"If checked, search is treated as a regular expression\" /><label for=\"searchRegex\">Regex</label>', '<input type=\"checkbox\" id=\"searchCaseSensitive\" onclick=\"doSearch()\" title=\"If checked, search is case sensitive\" /><label for=\"searchCaseSensitive\">Match case</label>', '<input type=\"checkbox\" id=\"searchDisable\" onclick=\"toggleSearchEnabled()\" title=\"Enable/disable search\" /><label for=\"searchDisable\" class=\"alwaysenabled\">Disable</label>', '<div id=\"searchNav\">', '<input type=\"button\" id=\"searchNext\" disabled=\"disabled\" value=\"Next\" onclick=\"searchNext()\" class=\"button\" title=\"Go to the next matching log entry\" />', '<input type=\"button\" id=\"searchPrevious\" disabled=\"disabled\" value=\"Previous\" onclick=\"searchPrevious()\" class=\"button\" title=\"Go to the previous matching log entry\" />', '<input type=\"checkbox\" id=\"searchFilter\" onclick=\"toggleSearchFilter()\" title=\"If checked, non-matching log entries are filtered out\" /><label for=\"searchFilter\">Filter</label>', '<input type=\"checkbox\" id=\"searchHighlight\" onclick=\"toggleSearchHighlight()\" title=\"Highlight matched search terms\" /><label for=\"searchHighlight\" class=\"alwaysenabled\">Highlight all</label>', '</div>', '</div>', '<div id=\"options\" class=\"toolbar\">', 'Options:', '<input type=\"checkbox\" id=\"enableLogging\" onclick=\"toggleLoggingEnabled()\" checked=\"checked\" title=\"Enable/disable logging\" /><label for=\"enableLogging\" id=\"enableLoggingLabel\">Log</label>', '<input type=\"checkbox\" id=\"wrap\" onclick=\"toggleWrap()\" title=\"Enable / disable word wrap\" /><label for=\"wrap\" id=\"wrapLabel\">Wrap</label>', '<input type=\"checkbox\" id=\"newestAtTop\" onclick=\"toggleNewestAtTop()\" title=\"If checked, causes newest messages to appear at the top\" /><label for=\"newestAtTop\" id=\"newestAtTopLabel\">Newest at the top</label>', '<input type=\"checkbox\" id=\"scrollToLatest\" onclick=\"toggleScrollToLatest()\" checked=\"checked\" title=\"If checked, window automatically scrolls to a new message when it is added\" /><label for=\"scrollToLatest\" id=\"scrollToLatestLabel\">Scroll to latest</label>', '<input type=\"button\" id=\"clearButton\" value=\"Clear\" onclick=\"clearLog()\" class=\"button\" title=\"Clear all log messages\"  />', '<input type=\"button\" id=\"hideButton\" value=\"Hide\" onclick=\"hide()\" class=\"hidden button\" title=\"Hide the console\" />', '<input type=\"button\" id=\"closeButton\" value=\"Close\" onclick=\"closeWindow()\" class=\"hidden button\" title=\"Close the window\" />', '</div>', '</div>', '</div>', '<div id=\"log\" class=\"TRACE DEBUG INFO WARN ERROR FATAL\"></div>', '<div id=\"commandLine\" class=\"toolbar\">', '<div id=\"commandLineContainer\">', '<input type=\"text\" id=\"command\" title=\"Enter a JavaScript command here and hit return or press \\'Evaluate\\'\" />', '<input type=\"button\" id=\"evaluateButton\" value=\"Evaluate\" class=\"button\" title=\"Evaluate the command\" onclick=\"evalCommandLine()\" />', '</div>', '</div>', '</body>', '</html>', ''];\n    };\n\n    var defaultCommandLineFunctions = [];\n\n    ConsoleAppender = function ConsoleAppender() {};\n\n    var consoleAppenderIdCounter = 1;\n    ConsoleAppender.prototype = new Appender();\n\n    ConsoleAppender.prototype.create = function (inPage, container, lazyInit, initiallyMinimized, useDocumentWrite, width, height, focusConsoleWindow) {\n      var appender = this;\n      var initialized = false;\n      var consoleWindowCreated = false;\n      var consoleWindowLoaded = false;\n      var consoleClosed = false;\n      var queuedLoggingEvents = [];\n      var isSupported = true;\n      var consoleAppenderId = consoleAppenderIdCounter++;\n      initiallyMinimized = extractBooleanFromParam(initiallyMinimized, this.defaults.initiallyMinimized);\n      lazyInit = extractBooleanFromParam(lazyInit, this.defaults.lazyInit);\n      useDocumentWrite = extractBooleanFromParam(useDocumentWrite, this.defaults.useDocumentWrite);\n      var newestMessageAtTop = this.defaults.newestMessageAtTop;\n      var scrollToLatestMessage = this.defaults.scrollToLatestMessage;\n      width = width ? width : this.defaults.width;\n      height = height ? height : this.defaults.height;\n      var maxMessages = this.defaults.maxMessages;\n      var showCommandLine = this.defaults.showCommandLine;\n      var commandLineObjectExpansionDepth = this.defaults.commandLineObjectExpansionDepth;\n      var showHideButton = this.defaults.showHideButton;\n      var showCloseButton = this.defaults.showCloseButton;\n      this.setLayout(this.defaults.layout);\n      var init, createWindow, safeToAppend, getConsoleWindow, open;\n      var appenderName = inPage ? \"InPageAppender\" : \"PopUpAppender\";\n\n      var checkCanConfigure = function checkCanConfigure(configOptionName) {\n        if (consoleWindowCreated) {\n          handleError(appenderName + \": configuration option '\" + configOptionName + \"' may not be set after the appender has been initialized\");\n          return false;\n        }\n\n        return true;\n      };\n\n      var consoleWindowExists = function consoleWindowExists() {\n        return consoleWindowLoaded && isSupported && !consoleClosed;\n      };\n\n      this.isNewestMessageAtTop = function () {\n        return newestMessageAtTop;\n      };\n\n      this.setNewestMessageAtTop = function (newestMessageAtTopParam) {\n        newestMessageAtTop = bool(newestMessageAtTopParam);\n\n        if (consoleWindowExists()) {\n          getConsoleWindow().setNewestAtTop(newestMessageAtTop);\n        }\n      };\n\n      this.isScrollToLatestMessage = function () {\n        return scrollToLatestMessage;\n      };\n\n      this.setScrollToLatestMessage = function (scrollToLatestMessageParam) {\n        scrollToLatestMessage = bool(scrollToLatestMessageParam);\n\n        if (consoleWindowExists()) {\n          getConsoleWindow().setScrollToLatest(scrollToLatestMessage);\n        }\n      };\n\n      this.getWidth = function () {\n        return width;\n      };\n\n      this.setWidth = function (widthParam) {\n        if (checkCanConfigure(\"width\")) {\n          width = extractStringFromParam(widthParam, width);\n        }\n      };\n\n      this.getHeight = function () {\n        return height;\n      };\n\n      this.setHeight = function (heightParam) {\n        if (checkCanConfigure(\"height\")) {\n          height = extractStringFromParam(heightParam, height);\n        }\n      };\n\n      this.getMaxMessages = function () {\n        return maxMessages;\n      };\n\n      this.setMaxMessages = function (maxMessagesParam) {\n        maxMessages = extractIntFromParam(maxMessagesParam, maxMessages);\n\n        if (consoleWindowExists()) {\n          getConsoleWindow().setMaxMessages(maxMessages);\n        }\n      };\n\n      this.isShowCommandLine = function () {\n        return showCommandLine;\n      };\n\n      this.setShowCommandLine = function (showCommandLineParam) {\n        showCommandLine = bool(showCommandLineParam);\n\n        if (consoleWindowExists()) {\n          getConsoleWindow().setShowCommandLine(showCommandLine);\n        }\n      };\n\n      this.isShowHideButton = function () {\n        return showHideButton;\n      };\n\n      this.setShowHideButton = function (showHideButtonParam) {\n        showHideButton = bool(showHideButtonParam);\n\n        if (consoleWindowExists()) {\n          getConsoleWindow().setShowHideButton(showHideButton);\n        }\n      };\n\n      this.isShowCloseButton = function () {\n        return showCloseButton;\n      };\n\n      this.setShowCloseButton = function (showCloseButtonParam) {\n        showCloseButton = bool(showCloseButtonParam);\n\n        if (consoleWindowExists()) {\n          getConsoleWindow().setShowCloseButton(showCloseButton);\n        }\n      };\n\n      this.getCommandLineObjectExpansionDepth = function () {\n        return commandLineObjectExpansionDepth;\n      };\n\n      this.setCommandLineObjectExpansionDepth = function (commandLineObjectExpansionDepthParam) {\n        commandLineObjectExpansionDepth = extractIntFromParam(commandLineObjectExpansionDepthParam, commandLineObjectExpansionDepth);\n      };\n\n      var minimized = initiallyMinimized;\n\n      this.isInitiallyMinimized = function () {\n        return initiallyMinimized;\n      };\n\n      this.setInitiallyMinimized = function (initiallyMinimizedParam) {\n        if (checkCanConfigure(\"initiallyMinimized\")) {\n          initiallyMinimized = bool(initiallyMinimizedParam);\n          minimized = initiallyMinimized;\n        }\n      };\n\n      this.isUseDocumentWrite = function () {\n        return useDocumentWrite;\n      };\n\n      this.setUseDocumentWrite = function (useDocumentWriteParam) {\n        if (checkCanConfigure(\"useDocumentWrite\")) {\n          useDocumentWrite = bool(useDocumentWriteParam);\n        }\n      };\n\n      function QueuedLoggingEvent(loggingEvent, formattedMessage) {\n        this.loggingEvent = loggingEvent;\n        this.levelName = loggingEvent.level.name;\n        this.formattedMessage = formattedMessage;\n      }\n\n      QueuedLoggingEvent.prototype.append = function () {\n        getConsoleWindow().log(this.levelName, this.formattedMessage);\n      };\n\n      function QueuedGroup(name, initiallyExpanded) {\n        this.name = name;\n        this.initiallyExpanded = initiallyExpanded;\n      }\n\n      QueuedGroup.prototype.append = function () {\n        getConsoleWindow().group(this.name, this.initiallyExpanded);\n      };\n\n      function QueuedGroupEnd() {}\n\n      QueuedGroupEnd.prototype.append = function () {\n        getConsoleWindow().groupEnd();\n      };\n\n      var checkAndAppend = function checkAndAppend() {\n        safeToAppend();\n\n        if (!initialized) {\n          init();\n        } else if (consoleClosed && reopenWhenClosed) {\n          createWindow();\n        }\n\n        if (safeToAppend()) {\n          appendQueuedLoggingEvents();\n        }\n      };\n\n      this.append = function (loggingEvent) {\n        if (isSupported) {\n          var formattedMessage = appender.getLayout().formatWithException(loggingEvent);\n          queuedLoggingEvents.push(new QueuedLoggingEvent(loggingEvent, formattedMessage));\n          checkAndAppend();\n        }\n      };\n\n      this.group = function (name, initiallyExpanded) {\n        if (isSupported) {\n          queuedLoggingEvents.push(new QueuedGroup(name, initiallyExpanded));\n          checkAndAppend();\n        }\n      };\n\n      this.groupEnd = function () {\n        if (isSupported) {\n          queuedLoggingEvents.push(new QueuedGroupEnd());\n          checkAndAppend();\n        }\n      };\n\n      var appendQueuedLoggingEvents = function appendQueuedLoggingEvents() {\n        while (queuedLoggingEvents.length > 0) {\n          queuedLoggingEvents.shift().append();\n        }\n\n        if (focusConsoleWindow) {\n          getConsoleWindow().focus();\n        }\n      };\n\n      this.setAddedToLogger = function (logger) {\n        this.loggers.push(logger);\n\n        if (enabled && !lazyInit) {\n          init();\n        }\n      };\n\n      this.clear = function () {\n        if (consoleWindowExists()) {\n          getConsoleWindow().clearLog();\n        }\n\n        queuedLoggingEvents.length = 0;\n      };\n\n      this.focus = function () {\n        if (consoleWindowExists()) {\n          getConsoleWindow().focus();\n        }\n      };\n\n      this.focusCommandLine = function () {\n        if (consoleWindowExists()) {\n          getConsoleWindow().focusCommandLine();\n        }\n      };\n\n      this.focusSearch = function () {\n        if (consoleWindowExists()) {\n          getConsoleWindow().focusSearch();\n        }\n      };\n\n      var commandWindow = window;\n\n      this.getCommandWindow = function () {\n        return commandWindow;\n      };\n\n      this.setCommandWindow = function (commandWindowParam) {\n        commandWindow = commandWindowParam;\n      };\n\n      this.executeLastCommand = function () {\n        if (consoleWindowExists()) {\n          getConsoleWindow().evalLastCommand();\n        }\n      };\n\n      var commandLayout = new PatternLayout(\"%m\");\n\n      this.getCommandLayout = function () {\n        return commandLayout;\n      };\n\n      this.setCommandLayout = function (commandLayoutParam) {\n        commandLayout = commandLayoutParam;\n      };\n\n      this.evalCommandAndAppend = function (expr) {\n        var commandReturnValue = {\n          appendResult: true,\n          isError: false\n        };\n        var commandOutput = \"\";\n\n        try {\n          var result, i;\n\n          if (!commandWindow.eval && commandWindow.execScript) {\n            commandWindow.execScript(\"null\");\n          }\n\n          var commandLineFunctionsHash = {};\n\n          for (i = 0, len = commandLineFunctions.length; i < len; i++) {\n            commandLineFunctionsHash[commandLineFunctions[i][0]] = commandLineFunctions[i][1];\n          }\n\n          var objectsToRestore = [];\n\n          var addObjectToRestore = function addObjectToRestore(name) {\n            objectsToRestore.push([name, commandWindow[name]]);\n          };\n\n          addObjectToRestore(\"appender\");\n          commandWindow.appender = appender;\n          addObjectToRestore(\"commandReturnValue\");\n          commandWindow.commandReturnValue = commandReturnValue;\n          addObjectToRestore(\"commandLineFunctionsHash\");\n          commandWindow.commandLineFunctionsHash = commandLineFunctionsHash;\n\n          var addFunctionToWindow = function addFunctionToWindow(name) {\n            addObjectToRestore(name);\n\n            commandWindow[name] = function () {\n              return this.commandLineFunctionsHash[name](appender, arguments, commandReturnValue);\n            };\n          };\n\n          for (i = 0, len = commandLineFunctions.length; i < len; i++) {\n            addFunctionToWindow(commandLineFunctions[i][0]);\n          }\n\n          if (commandWindow === window && commandWindow.execScript) {\n            addObjectToRestore(\"evalExpr\");\n            addObjectToRestore(\"result\");\n            window.evalExpr = expr;\n            commandWindow.execScript(\"window.result=eval(window.evalExpr);\");\n            result = window.result;\n          } else {\n            result = commandWindow.eval(expr);\n          }\n\n          commandOutput = isUndefined(result) ? result : formatObjectExpansion(result, commandLineObjectExpansionDepth);\n\n          for (i = 0, len = objectsToRestore.length; i < len; i++) {\n            commandWindow[objectsToRestore[i][0]] = objectsToRestore[i][1];\n          }\n        } catch (ex) {\n          commandOutput = \"Error evaluating command: \" + getExceptionStringRep(ex);\n          commandReturnValue.isError = true;\n        }\n\n        if (commandReturnValue.appendResult) {\n          var message = \">>> \" + expr;\n\n          if (!isUndefined(commandOutput)) {\n            message += newLine + commandOutput;\n          }\n\n          var level = commandReturnValue.isError ? Level.ERROR : Level.INFO;\n          var loggingEvent = new LoggingEvent(null, new Date(), level, [message], null);\n          var mainLayout = this.getLayout();\n          this.setLayout(commandLayout);\n          this.append(loggingEvent);\n          this.setLayout(mainLayout);\n        }\n      };\n\n      var commandLineFunctions = defaultCommandLineFunctions.concat([]);\n\n      this.addCommandLineFunction = function (functionName, commandLineFunction) {\n        commandLineFunctions.push([functionName, commandLineFunction]);\n      };\n\n      var commandHistoryCookieName = \"log4javascriptCommandHistory\";\n\n      this.storeCommandHistory = function (commandHistory) {\n        setCookie(commandHistoryCookieName, commandHistory.join(\",\"));\n      };\n\n      var writeHtml = function writeHtml(doc) {\n        var lines = getConsoleHtmlLines();\n        doc.open();\n\n        for (var i = 0, len = lines.length; i < len; i++) {\n          doc.writeln(lines[i]);\n        }\n\n        doc.close();\n      };\n\n      this.setEventTypes([\"load\", \"unload\"]);\n\n      var consoleWindowLoadHandler = function consoleWindowLoadHandler() {\n        var win = getConsoleWindow();\n        win.setAppender(appender);\n        win.setNewestAtTop(newestMessageAtTop);\n        win.setScrollToLatest(scrollToLatestMessage);\n        win.setMaxMessages(maxMessages);\n        win.setShowCommandLine(showCommandLine);\n        win.setShowHideButton(showHideButton);\n        win.setShowCloseButton(showCloseButton);\n        win.setMainWindow(window);\n        var storedValue = getCookie(commandHistoryCookieName);\n\n        if (storedValue) {\n          win.commandHistory = storedValue.split(\",\");\n          win.currentCommandIndex = win.commandHistory.length;\n        }\n\n        appender.dispatchEvent(\"load\", {\n          \"win\": win\n        });\n      };\n\n      this.unload = function () {\n        logLog.debug(\"unload \" + this + \", caller: \" + this.unload.caller);\n\n        if (!consoleClosed) {\n          logLog.debug(\"really doing unload \" + this);\n          consoleClosed = true;\n          consoleWindowLoaded = false;\n          consoleWindowCreated = false;\n          appender.dispatchEvent(\"unload\", {});\n        }\n      };\n\n      var pollConsoleWindow = function pollConsoleWindow(windowTest, interval, successCallback, errorMessage) {\n        function doPoll() {\n          try {\n            if (consoleClosed) {\n              clearInterval(poll);\n            }\n\n            if (windowTest(getConsoleWindow())) {\n              clearInterval(poll);\n              successCallback();\n            }\n          } catch (ex) {\n            clearInterval(poll);\n            isSupported = false;\n            handleError(errorMessage, ex);\n          }\n        }\n\n        var poll = setInterval(doPoll, interval);\n      };\n\n      var getConsoleUrl = function getConsoleUrl() {\n        var documentDomainSet = document.domain != location.hostname;\n        return useDocumentWrite ? \"\" : getBaseUrl() + \"console.html\" + (documentDomainSet ? \"?log4javascript_domain=\" + escape(document.domain) : \"\");\n      };\n\n      if (inPage) {\n        var containerElement = null;\n        var cssProperties = [];\n\n        this.addCssProperty = function (name, value) {\n          if (checkCanConfigure(\"cssProperties\")) {\n            cssProperties.push([name, value]);\n          }\n        };\n\n        var windowCreationStarted = false;\n        var iframeContainerDiv;\n        var iframeId = uniqueId + \"_InPageAppender_\" + consoleAppenderId;\n\n        this.hide = function () {\n          if (initialized && consoleWindowCreated) {\n            if (consoleWindowExists()) {\n              getConsoleWindow().$(\"command\").blur();\n            }\n\n            iframeContainerDiv.style.display = \"none\";\n            minimized = true;\n          }\n        };\n\n        this.show = function () {\n          if (initialized) {\n            if (consoleWindowCreated) {\n              iframeContainerDiv.style.display = \"block\";\n              this.setShowCommandLine(showCommandLine);\n              minimized = false;\n            } else if (!windowCreationStarted) {\n              createWindow(true);\n            }\n          }\n        };\n\n        this.isVisible = function () {\n          return !minimized && !consoleClosed;\n        };\n\n        this.close = function (fromButton) {\n          if (!consoleClosed && (!fromButton || confirm(\"This will permanently remove the console from the page. No more messages will be logged. Do you wish to continue?\"))) {\n            iframeContainerDiv.parentNode.removeChild(iframeContainerDiv);\n            this.unload();\n          }\n        };\n\n        open = function open() {\n          var initErrorMessage = \"InPageAppender.open: unable to create console iframe\";\n\n          function finalInit() {\n            try {\n              if (!initiallyMinimized) {\n                appender.show();\n              }\n\n              consoleWindowLoadHandler();\n              consoleWindowLoaded = true;\n              appendQueuedLoggingEvents();\n            } catch (ex) {\n              isSupported = false;\n              handleError(initErrorMessage, ex);\n            }\n          }\n\n          function writeToDocument() {\n            try {\n              var windowTest = function windowTest(win) {\n                return isLoaded(win);\n              };\n\n              if (useDocumentWrite) {\n                writeHtml(getConsoleWindow().document);\n              }\n\n              if (windowTest(getConsoleWindow())) {\n                finalInit();\n              } else {\n                pollConsoleWindow(windowTest, 100, finalInit, initErrorMessage);\n              }\n            } catch (ex) {\n              isSupported = false;\n              handleError(initErrorMessage, ex);\n            }\n          }\n\n          minimized = false;\n          iframeContainerDiv = containerElement.appendChild(document.createElement(\"div\"));\n          iframeContainerDiv.style.width = width;\n          iframeContainerDiv.style.height = height;\n          iframeContainerDiv.style.border = \"solid gray 1px\";\n\n          for (var i = 0, len = cssProperties.length; i < len; i++) {\n            iframeContainerDiv.style[cssProperties[i][0]] = cssProperties[i][1];\n          }\n\n          var iframeSrc = useDocumentWrite ? \"\" : \" src='\" + getConsoleUrl() + \"'\";\n          iframeContainerDiv.innerHTML = \"<iframe id='\" + iframeId + \"' name='\" + iframeId + \"' width='100%' height='100%' frameborder='0'\" + iframeSrc + \" scrolling='no'></iframe>\";\n          consoleClosed = false;\n\n          var iframeDocumentExistsTest = function iframeDocumentExistsTest(win) {\n            try {\n              return bool(win) && bool(win.document);\n            } catch (ex) {\n              return false;\n            }\n          };\n\n          if (iframeDocumentExistsTest(getConsoleWindow())) {\n            writeToDocument();\n          } else {\n            pollConsoleWindow(iframeDocumentExistsTest, 100, writeToDocument, initErrorMessage);\n          }\n\n          consoleWindowCreated = true;\n        };\n\n        createWindow = function createWindow(show) {\n          if (show || !initiallyMinimized) {\n            var pageLoadHandler = function pageLoadHandler() {\n              if (!container) {\n                containerElement = document.createElement(\"div\");\n                containerElement.style.position = \"fixed\";\n                containerElement.style.left = \"0\";\n                containerElement.style.right = \"0\";\n                containerElement.style.bottom = \"0\";\n                document.body.appendChild(containerElement);\n                appender.addCssProperty(\"borderWidth\", \"1px 0 0 0\");\n                appender.addCssProperty(\"zIndex\", 1000000);\n                open();\n              } else {\n                try {\n                  var el = document.getElementById(container);\n\n                  if (el.nodeType == 1) {\n                    containerElement = el;\n                  }\n\n                  open();\n                } catch (ex) {\n                  handleError(\"InPageAppender.init: invalid container element '\" + container + \"' supplied\", ex);\n                }\n              }\n            };\n\n            if (pageLoaded && container && container.appendChild) {\n              containerElement = container;\n              open();\n            } else if (pageLoaded) {\n              pageLoadHandler();\n            } else {\n              log4javascript.addEventListener(\"load\", pageLoadHandler);\n            }\n\n            windowCreationStarted = true;\n          }\n        };\n\n        init = function init() {\n          createWindow();\n          initialized = true;\n        };\n\n        getConsoleWindow = function getConsoleWindow() {\n          var iframe = window.frames[iframeId];\n\n          if (iframe) {\n            return iframe;\n          }\n        };\n\n        safeToAppend = function safeToAppend() {\n          if (isSupported && !consoleClosed) {\n            if (consoleWindowCreated && !consoleWindowLoaded && getConsoleWindow() && isLoaded(getConsoleWindow())) {\n              consoleWindowLoaded = true;\n            }\n\n            return consoleWindowLoaded;\n          }\n\n          return false;\n        };\n      } else {\n        var useOldPopUp = appender.defaults.useOldPopUp;\n        var complainAboutPopUpBlocking = appender.defaults.complainAboutPopUpBlocking;\n        var reopenWhenClosed = this.defaults.reopenWhenClosed;\n\n        this.isUseOldPopUp = function () {\n          return useOldPopUp;\n        };\n\n        this.setUseOldPopUp = function (useOldPopUpParam) {\n          if (checkCanConfigure(\"useOldPopUp\")) {\n            useOldPopUp = bool(useOldPopUpParam);\n          }\n        };\n\n        this.isComplainAboutPopUpBlocking = function () {\n          return complainAboutPopUpBlocking;\n        };\n\n        this.setComplainAboutPopUpBlocking = function (complainAboutPopUpBlockingParam) {\n          if (checkCanConfigure(\"complainAboutPopUpBlocking\")) {\n            complainAboutPopUpBlocking = bool(complainAboutPopUpBlockingParam);\n          }\n        };\n\n        this.isFocusPopUp = function () {\n          return focusConsoleWindow;\n        };\n\n        this.setFocusPopUp = function (focusPopUpParam) {\n          focusConsoleWindow = bool(focusPopUpParam);\n        };\n\n        this.isReopenWhenClosed = function () {\n          return reopenWhenClosed;\n        };\n\n        this.setReopenWhenClosed = function (reopenWhenClosedParam) {\n          reopenWhenClosed = bool(reopenWhenClosedParam);\n        };\n\n        this.close = function () {\n          logLog.debug(\"close \" + this);\n\n          try {\n            popUp.close();\n            this.unload();\n          } catch (ex) {}\n        };\n\n        this.hide = function () {\n          logLog.debug(\"hide \" + this);\n\n          if (consoleWindowExists()) {\n            this.close();\n          }\n        };\n\n        this.show = function () {\n          logLog.debug(\"show \" + this);\n\n          if (!consoleWindowCreated) {\n            open();\n          }\n        };\n\n        this.isVisible = function () {\n          return safeToAppend();\n        };\n\n        var popUp;\n\n        open = function open() {\n          var windowProperties = \"width=\" + width + \",height=\" + height + \",status,resizable\";\n          var frameInfo = \"\";\n\n          try {\n            var frameEl = window.frameElement;\n\n            if (frameEl) {\n              frameInfo = \"_\" + frameEl.tagName + \"_\" + (frameEl.name || frameEl.id || \"\");\n            }\n          } catch (e) {\n            frameInfo = \"_inaccessibleParentFrame\";\n          }\n\n          var windowName = \"PopUp_\" + location.host.replace(/[^a-z0-9]/gi, \"_\") + \"_\" + consoleAppenderId + frameInfo;\n\n          if (!useOldPopUp || !useDocumentWrite) {\n            windowName = windowName + \"_\" + uniqueId;\n          }\n\n          var checkPopUpClosed = function checkPopUpClosed(win) {\n            if (consoleClosed) {\n              return true;\n            } else {\n              try {\n                return bool(win) && win.closed;\n              } catch (ex) {}\n            }\n\n            return false;\n          };\n\n          var popUpClosedCallback = function popUpClosedCallback() {\n            if (!consoleClosed) {\n              appender.unload();\n            }\n          };\n\n          function finalInit() {\n            getConsoleWindow().setCloseIfOpenerCloses(!useOldPopUp || !useDocumentWrite);\n            consoleWindowLoadHandler();\n            consoleWindowLoaded = true;\n            appendQueuedLoggingEvents();\n            pollConsoleWindow(checkPopUpClosed, 500, popUpClosedCallback, \"PopUpAppender.checkPopUpClosed: error checking pop-up window\");\n          }\n\n          try {\n            popUp = window.open(getConsoleUrl(), windowName, windowProperties);\n            consoleClosed = false;\n            consoleWindowCreated = true;\n\n            if (popUp && popUp.document) {\n              if (useDocumentWrite && useOldPopUp && isLoaded(popUp)) {\n                popUp.mainPageReloaded();\n                finalInit();\n              } else {\n                if (useDocumentWrite) {\n                  writeHtml(popUp.document);\n                }\n\n                var popUpLoadedTest = function popUpLoadedTest(win) {\n                  return bool(win) && isLoaded(win);\n                };\n\n                if (isLoaded(popUp)) {\n                  finalInit();\n                } else {\n                  pollConsoleWindow(popUpLoadedTest, 100, finalInit, \"PopUpAppender.init: unable to create console window\");\n                }\n              }\n            } else {\n              isSupported = false;\n              logLog.warn(\"PopUpAppender.init: pop-ups blocked, please unblock to use PopUpAppender\");\n\n              if (complainAboutPopUpBlocking) {\n                handleError(\"log4javascript: pop-up windows appear to be blocked. Please unblock them to use pop-up logging.\");\n              }\n            }\n          } catch (ex) {\n            handleError(\"PopUpAppender.init: error creating pop-up\", ex);\n          }\n        };\n\n        createWindow = function createWindow() {\n          if (!initiallyMinimized) {\n            open();\n          }\n        };\n\n        init = function init() {\n          createWindow();\n          initialized = true;\n        };\n\n        getConsoleWindow = function getConsoleWindow() {\n          return popUp;\n        };\n\n        safeToAppend = function safeToAppend() {\n          if (isSupported && !isUndefined(popUp) && !consoleClosed) {\n            if (popUp.closed || consoleWindowLoaded && isUndefined(popUp.closed)) {\n              appender.unload();\n              logLog.debug(\"PopUpAppender: pop-up closed\");\n              return false;\n            }\n\n            if (!consoleWindowLoaded && isLoaded(popUp)) {\n              consoleWindowLoaded = true;\n            }\n          }\n\n          return isSupported && consoleWindowLoaded && !consoleClosed;\n        };\n      }\n\n      this.getConsoleWindow = getConsoleWindow;\n    };\n\n    ConsoleAppender.addGlobalCommandLineFunction = function (functionName, commandLineFunction) {\n      defaultCommandLineFunctions.push([functionName, commandLineFunction]);\n    };\n\n    function PopUpAppender(lazyInit, initiallyMinimized, useDocumentWrite, width, height) {\n      this.create(false, null, lazyInit, initiallyMinimized, useDocumentWrite, width, height, this.defaults.focusPopUp);\n    }\n\n    PopUpAppender.prototype = new ConsoleAppender();\n    PopUpAppender.prototype.defaults = {\n      layout: new PatternLayout(\"%d{HH:mm:ss} %-5p - %m{1}%n\"),\n      initiallyMinimized: false,\n      focusPopUp: false,\n      lazyInit: true,\n      useOldPopUp: true,\n      complainAboutPopUpBlocking: true,\n      newestMessageAtTop: false,\n      scrollToLatestMessage: true,\n      width: \"600\",\n      height: \"400\",\n      reopenWhenClosed: false,\n      maxMessages: null,\n      showCommandLine: true,\n      commandLineObjectExpansionDepth: 1,\n      showHideButton: false,\n      showCloseButton: true,\n      useDocumentWrite: true\n    };\n\n    PopUpAppender.prototype.toString = function () {\n      return \"PopUpAppender\";\n    };\n\n    log4javascript.PopUpAppender = PopUpAppender;\n\n    function InPageAppender(container, lazyInit, initiallyMinimized, useDocumentWrite, width, height) {\n      this.create(true, container, lazyInit, initiallyMinimized, useDocumentWrite, width, height, false);\n    }\n\n    InPageAppender.prototype = new ConsoleAppender();\n    InPageAppender.prototype.defaults = {\n      layout: new PatternLayout(\"%d{HH:mm:ss} %-5p - %m{1}%n\"),\n      initiallyMinimized: false,\n      lazyInit: true,\n      newestMessageAtTop: false,\n      scrollToLatestMessage: true,\n      width: \"100%\",\n      height: \"220px\",\n      maxMessages: null,\n      showCommandLine: true,\n      commandLineObjectExpansionDepth: 1,\n      showHideButton: false,\n      showCloseButton: false,\n      showLogEntryDeleteButtons: true,\n      useDocumentWrite: true\n    };\n\n    InPageAppender.prototype.toString = function () {\n      return \"InPageAppender\";\n    };\n\n    log4javascript.InPageAppender = InPageAppender;\n    log4javascript.InlineAppender = InPageAppender;\n  })();\n\n  function padWithSpaces(str, len) {\n    if (str.length < len) {\n      var spaces = [];\n      var numberOfSpaces = Math.max(0, len - str.length);\n\n      for (var i = 0; i < numberOfSpaces; i++) {\n        spaces[i] = \" \";\n      }\n\n      str += spaces.join(\"\");\n    }\n\n    return str;\n  }\n\n  (function () {\n    function dir(obj) {\n      var maxLen = 0;\n\n      for (var p in obj) {\n        maxLen = Math.max(toStr(p).length, maxLen);\n      }\n\n      var propList = [];\n\n      for (p in obj) {\n        var propNameStr = \"  \" + padWithSpaces(toStr(p), maxLen + 2);\n        var propVal;\n\n        try {\n          propVal = splitIntoLines(toStr(obj[p])).join(padWithSpaces(newLine, maxLen + 6));\n        } catch (ex) {\n          propVal = \"[Error obtaining property. Details: \" + getExceptionMessage(ex) + \"]\";\n        }\n\n        propList.push(propNameStr + propVal);\n      }\n\n      return propList.join(newLine);\n    }\n\n    var nodeTypes = {\n      ELEMENT_NODE: 1,\n      ATTRIBUTE_NODE: 2,\n      TEXT_NODE: 3,\n      CDATA_SECTION_NODE: 4,\n      ENTITY_REFERENCE_NODE: 5,\n      ENTITY_NODE: 6,\n      PROCESSING_INSTRUCTION_NODE: 7,\n      COMMENT_NODE: 8,\n      DOCUMENT_NODE: 9,\n      DOCUMENT_TYPE_NODE: 10,\n      DOCUMENT_FRAGMENT_NODE: 11,\n      NOTATION_NODE: 12\n    };\n    var preFormattedElements = [\"script\", \"pre\"];\n    var emptyElements = [\"br\", \"img\", \"hr\", \"param\", \"link\", \"area\", \"input\", \"col\", \"base\", \"meta\"];\n    var indentationUnit = \"  \";\n\n    function getXhtml(rootNode, includeRootNode, indentation, startNewLine, preformatted) {\n      includeRootNode = typeof includeRootNode == \"undefined\" ? true : !!includeRootNode;\n\n      if (typeof indentation != \"string\") {\n        indentation = \"\";\n      }\n\n      startNewLine = !!startNewLine;\n      preformatted = !!preformatted;\n      var xhtml;\n\n      function isWhitespace(node) {\n        return node.nodeType == nodeTypes.TEXT_NODE && /^[ \\t\\r\\n]*$/.test(node.nodeValue);\n      }\n\n      function fixAttributeValue(attrValue) {\n        return attrValue.toString().replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\"/g, \"&quot;\");\n      }\n\n      function getStyleAttributeValue(el) {\n        var stylePairs = el.style.cssText.split(\";\");\n        var styleValue = \"\";\n\n        for (var j = 0, len = stylePairs.length; j < len; j++) {\n          var nameValueBits = stylePairs[j].split(\":\");\n          var props = [];\n\n          if (!/^\\s*$/.test(nameValueBits[0])) {\n            props.push(trim(nameValueBits[0]).toLowerCase() + \":\" + trim(nameValueBits[1]));\n          }\n\n          styleValue = props.join(\";\");\n        }\n\n        return styleValue;\n      }\n\n      function getNamespace(el) {\n        if (el.prefix) {\n          return el.prefix;\n        } else if (el.outerHTML) {\n          var regex = new RegExp(\"<([^:]+):\" + el.tagName + \"[^>]*>\", \"i\");\n\n          if (regex.test(el.outerHTML)) {\n            return RegExp.$1.toLowerCase();\n          }\n        }\n\n        return \"\";\n      }\n\n      var lt = \"<\";\n      var gt = \">\";\n      var i, len;\n\n      if (includeRootNode && rootNode.nodeType != nodeTypes.DOCUMENT_FRAGMENT_NODE) {\n        switch (rootNode.nodeType) {\n          case nodeTypes.ELEMENT_NODE:\n            var tagName = rootNode.tagName.toLowerCase();\n            xhtml = startNewLine ? newLine + indentation : \"\";\n            xhtml += lt;\n            var prefix = getNamespace(rootNode);\n            var hasPrefix = !!prefix;\n\n            if (hasPrefix) {\n              xhtml += prefix + \":\";\n            }\n\n            xhtml += tagName;\n\n            for (i = 0, len = rootNode.attributes.length; i < len; i++) {\n              var currentAttr = rootNode.attributes[i];\n\n              if (!currentAttr.specified || currentAttr.nodeValue === null || currentAttr.nodeName.toLowerCase() === \"style\" || typeof currentAttr.nodeValue !== \"string\" || currentAttr.nodeName.indexOf(\"_moz\") === 0) {\n                continue;\n              }\n\n              xhtml += \" \" + currentAttr.nodeName.toLowerCase() + \"=\\\"\";\n              xhtml += fixAttributeValue(currentAttr.nodeValue);\n              xhtml += \"\\\"\";\n            }\n\n            if (rootNode.style.cssText) {\n              var styleValue = getStyleAttributeValue(rootNode);\n\n              if (styleValue !== \"\") {\n                xhtml += \" style=\\\"\" + getStyleAttributeValue(rootNode) + \"\\\"\";\n              }\n            }\n\n            if (array_contains(emptyElements, tagName) || hasPrefix && !rootNode.hasChildNodes()) {\n              xhtml += \"/\" + gt;\n            } else {\n              xhtml += gt;\n              var childStartNewLine = !(rootNode.childNodes.length === 1 && rootNode.childNodes[0].nodeType === nodeTypes.TEXT_NODE);\n              var childPreformatted = array_contains(preFormattedElements, tagName);\n\n              for (i = 0, len = rootNode.childNodes.length; i < len; i++) {\n                xhtml += getXhtml(rootNode.childNodes[i], true, indentation + indentationUnit, childStartNewLine, childPreformatted);\n              }\n\n              var endTag = lt + \"/\" + tagName + gt;\n              xhtml += childStartNewLine ? newLine + indentation + endTag : endTag;\n            }\n\n            return xhtml;\n\n          case nodeTypes.TEXT_NODE:\n            if (isWhitespace(rootNode)) {\n              xhtml = \"\";\n            } else {\n              if (preformatted) {\n                xhtml = rootNode.nodeValue;\n              } else {\n                var lines = splitIntoLines(trim(rootNode.nodeValue));\n                var trimmedLines = [];\n\n                for (i = 0, len = lines.length; i < len; i++) {\n                  trimmedLines[i] = trim(lines[i]);\n                }\n\n                xhtml = trimmedLines.join(newLine + indentation);\n              }\n\n              if (startNewLine) {\n                xhtml = newLine + indentation + xhtml;\n              }\n            }\n\n            return xhtml;\n\n          case nodeTypes.CDATA_SECTION_NODE:\n            return \"<![CDA\" + \"TA[\" + rootNode.nodeValue + \"]\" + \"]>\" + newLine;\n\n          case nodeTypes.DOCUMENT_NODE:\n            xhtml = \"\";\n\n            for (i = 0, len = rootNode.childNodes.length; i < len; i++) {\n              xhtml += getXhtml(rootNode.childNodes[i], true, indentation);\n            }\n\n            return xhtml;\n\n          default:\n            return \"\";\n        }\n      } else {\n        xhtml = \"\";\n\n        for (i = 0, len = rootNode.childNodes.length; i < len; i++) {\n          xhtml += getXhtml(rootNode.childNodes[i], true, indentation + indentationUnit);\n        }\n\n        return xhtml;\n      }\n    }\n\n    function createCommandLineFunctions() {\n      ConsoleAppender.addGlobalCommandLineFunction(\"$\", function (appender, args, returnValue) {\n        return document.getElementById(args[0]);\n      });\n      ConsoleAppender.addGlobalCommandLineFunction(\"dir\", function (appender, args, returnValue) {\n        var lines = [];\n\n        for (var i = 0, len = args.length; i < len; i++) {\n          lines[i] = dir(args[i]);\n        }\n\n        return lines.join(newLine + newLine);\n      });\n      ConsoleAppender.addGlobalCommandLineFunction(\"dirxml\", function (appender, args, returnValue) {\n        var lines = [];\n\n        for (var i = 0, len = args.length; i < len; i++) {\n          lines[i] = getXhtml(args[i]);\n        }\n\n        return lines.join(newLine + newLine);\n      });\n      ConsoleAppender.addGlobalCommandLineFunction(\"cd\", function (appender, args, returnValue) {\n        var win, message;\n\n        if (args.length === 0 || args[0] === \"\") {\n          win = window;\n          message = \"Command line set to run in main window\";\n        } else {\n          if (args[0].window == args[0]) {\n            win = args[0];\n            message = \"Command line set to run in frame '\" + args[0].name + \"'\";\n          } else {\n            win = window.frames[args[0]];\n\n            if (win) {\n              message = \"Command line set to run in frame '\" + args[0] + \"'\";\n            } else {\n              returnValue.isError = true;\n              message = \"Frame '\" + args[0] + \"' does not exist\";\n              win = appender.getCommandWindow();\n            }\n          }\n        }\n\n        appender.setCommandWindow(win);\n        return message;\n      });\n      ConsoleAppender.addGlobalCommandLineFunction(\"clear\", function (appender, args, returnValue) {\n        returnValue.appendResult = false;\n        appender.clear();\n      });\n      ConsoleAppender.addGlobalCommandLineFunction(\"keys\", function (appender, args, returnValue) {\n        var keys = [];\n\n        for (var k in args[0]) {\n          keys.push(k);\n        }\n\n        return keys;\n      });\n      ConsoleAppender.addGlobalCommandLineFunction(\"values\", function (appender, args, returnValue) {\n        var values = [];\n\n        for (var k in args[0]) {\n          try {\n            values.push(args[0][k]);\n          } catch (ex) {\n            logLog.warn(\"values(): Unable to obtain value for key \" + k + \". Details: \" + getExceptionMessage(ex));\n          }\n        }\n\n        return values;\n      });\n      ConsoleAppender.addGlobalCommandLineFunction(\"expansionDepth\", function (appender, args, returnValue) {\n        var expansionDepth = parseInt(args[0], 10);\n\n        if (isNaN(expansionDepth) || expansionDepth < 0) {\n          returnValue.isError = true;\n          return \"\" + args[0] + \" is not a valid expansion depth\";\n        } else {\n          appender.setCommandLineObjectExpansionDepth(expansionDepth);\n          return \"Object expansion depth set to \" + expansionDepth;\n        }\n      });\n    }\n\n    function init() {\n      createCommandLineFunctions();\n    }\n\n    init();\n  })();\n\n  function createDefaultLogger() {\n    var logger = log4javascript.getLogger(defaultLoggerName);\n    var a = new log4javascript.PopUpAppender();\n    logger.addAppender(a);\n    return logger;\n  }\n\n  log4javascript.setDocumentReady = function () {\n    pageLoaded = true;\n    log4javascript.dispatchEvent(\"load\", {});\n  };\n\n  if (window.addEventListener) {\n    window.addEventListener(\"load\", log4javascript.setDocumentReady, false);\n  } else if (window.attachEvent) {\n    window.attachEvent(\"onload\", log4javascript.setDocumentReady);\n  } else {\n    var oldOnload = window.onload;\n\n    if (typeof window.onload != \"function\") {\n      window.onload = log4javascript.setDocumentReady;\n    } else {\n      window.onload = function (evt) {\n        if (oldOnload) {\n          oldOnload(evt);\n        }\n\n        log4javascript.setDocumentReady();\n      };\n    }\n  }\n\n  return log4javascript;\n}, this);","map":null,"metadata":{},"sourceType":"script"}